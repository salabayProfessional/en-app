"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var react_tagsinput_1 = __importDefault(require("react-tagsinput"));
var formik_1 = require("formik");
require("react-tagsinput/react-tagsinput.css");
var TagsInputField = function (_a) {
    var addOnBlur = _a.addOnBlur, addOnPaste = _a.addOnPaste, className = _a.className, disabled = _a.disabled, focusedClassName = _a.focusedClassName, inputProps = _a.inputProps, maxTags = _a.maxTags, name = _a.name, pasteSplit = _a.pasteSplit, tagProps = _a.tagProps;
    var renderTagsInput = function (_a) {
        var field = _a.field, form = _a.form;
        var handleChange = function (tags) {
            form.setFieldValue(name, tags);
        };
        return (react_1.default.createElement(react_tagsinput_1.default, { addOnBlur: addOnBlur, addOnPaste: addOnPaste, className: className, disabled: disabled, focusedClassName: focusedClassName, inputProps: inputProps, maxTags: maxTags, onChange: handleChange, pasteSplit: pasteSplit, tagProps: tagProps, value: field.value }));
    };
    return (react_1.default.createElement(formik_1.Field, { name: name, render: renderTagsInput }));
};
TagsInputField.defaultProps = {
    addOnBlur: false,
    addOnPaste: false,
    className: 'react-tagsinput',
    disabled: false,
    focusedClassName: 'react-tagsinput--focused',
    inputProps: {
        className: 'react-tagsinput-input',
        placeholder: 'Add a tag',
    },
    maxTags: -1,
    pasteSplit: function (text) { return text.split(' ').map(function (word) { return word.trim(); }); },
    tagProps: {
        className: 'react-tagsinput-tag',
        classNameRemove: 'react-tagsinput-remove',
    },
};
exports.default = TagsInputField;
