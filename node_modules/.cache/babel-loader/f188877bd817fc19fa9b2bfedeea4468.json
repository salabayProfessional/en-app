{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/GitHub/en-app/src/component/Options/OptionsType.tsx\";\nimport { Field } from \"formik\";\nimport optionsData from \"../../mockData/options\";\nimport { generateString } from \"../../specialFunction/specialFunction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst optionsForTest = values => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options__content__list\",\n    children: optionsData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-type__options\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"start-title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-type__option-content\",\n          children: item.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-type__option-content-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `input-checkbox ${option === values[item.title] && \"active\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: item.title,\n              value: option,\n              type: \"radio\",\n              className: \"filed-checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 23\n            }, this)]\n          }, generateString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, generateString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport { optionsForTest };","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/component/Options/OptionsType.tsx"],"names":["Field","optionsData","generateString","optionsForTest","values","map","item","title","options","option"],"mappings":";AAAA,SAASA,KAAT,QAAsB,QAAtB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,uCAA/B;;;AAEA,MAAMC,cAAc,GAAIC,MAAD,IAAiB;AACtC,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,cAEIH,WAAW,CAACI,GAAZ,CAAiBC,IAAD,iBACd;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBAA6BA,IAAI,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,oBAEID,IAAI,CAACE,OAAL,CAAaH,GAAb,CAAkBI,MAAD,iBACf;AAAK,YAAA,SAAS,EAAC,kCAAf;AAAA,oCACE;AAAA,wBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAG,kBAAiBA,MAAM,KAAKL,MAAM,CAACE,IAAI,CAACC,KAAN,CAAjB,IAAiC,QAAS;AAA5E;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAED,IAAI,CAACC,KAAlB;AAAyB,cAAA,KAAK,EAAEE,MAAhC;AAAwC,cAAA,IAAI,EAAC,OAA7C;AAAqD,cAAA,SAAS,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA,aAAuDP,cAAc,EAArE;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAASA,cAAc,EAAvB;AAAA;AAAA;AAAA;AAAA,YADF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzBD;;AA2BA,SACEC,cADF","sourcesContent":["import { Field } from \"formik\";\nimport optionsData from \"../../mockData/options\";\nimport { generateString } from \"../../specialFunction/specialFunction\";\n\nconst optionsForTest = (values: any) => {\n  return (\n    <div className=\"options__content__list\">\n      { \n        optionsData.map((item) => (\n          <li key={generateString()}>     \n            <div className=\"group-type__options\">\n              <h3 className=\"start-title\">{item.title}</h3>\n              <div className=\"group-type__option-content\">\n                {\n                  item.options.map((option: string | number) => (\n                    <div className=\"group-type__option-content-inner\" key={generateString()}>\n                      <div>{option}</div>\n                      <div className={`input-checkbox ${option === values[item.title] && \"active\"}`} />\n                      <Field name={item.title} value={option} type=\"radio\" className=\"filed-checkbox\" />\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          </li>\n        ))\n      } \n    </div>\n  )\n};\n\nexport {\n  optionsForTest,\n};\n"]},"metadata":{},"sourceType":"module"}