{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _POSITION_KEYS;\n\nimport React, { memo } from 'react';\nimport { css } from 'glamor';\nimport PropTypes from 'prop-types';\nimport Positions from '../../constants/src/Position';\nimport { Pane } from '../../layers';\nimport { majorScale } from '../../scales';\nimport { useTheme } from '../../theme';\nimport { Tooltip } from '../../tooltip';\nvar pulseAnimation = css.keyframes('pulseAnimation', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '50%': {\n    transform: 'scale(1.9)'\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nvar animationTiming = 'cubic-bezier(0, 0, 0.58, 1)';\nvar animationDuration = '1.8s';\nvar pulsarAnimationClassName = css({\n  animation: \"\".concat(pulseAnimation, \" \").concat(animationDuration, \" \").concat(animationTiming, \" both infinite\")\n}).toString();\nvar POSITION_KEYS = (_POSITION_KEYS = {}, _defineProperty(_POSITION_KEYS, Positions.TOP_LEFT, ['top', 'left']), _defineProperty(_POSITION_KEYS, Positions.TOP_RIGHT, ['top', 'right']), _defineProperty(_POSITION_KEYS, Positions.BOTTOM_LEFT, ['bottom', 'left']), _defineProperty(_POSITION_KEYS, Positions.BOTTOM_RIGHT, ['bottom', 'right']), _POSITION_KEYS);\n\nvar getPositionProps = function getPositionProps(_ref) {\n  var position = _ref.position,\n      size = _ref.size;\n  var keys = POSITION_KEYS[position];\n  var props = {};\n  keys.forEach(function (key) {\n    var isYAxisKey = key === 'top' || key === 'bottom';\n\n    if (isYAxisKey) {\n      props[key] = -(size / 2);\n    } else {\n      props[key] = -size;\n    }\n  });\n  return props;\n};\n\nexport var Pulsar = /*#__PURE__*/memo(function (_ref2) {\n  var _ref2$position = _ref2.position,\n      position = _ref2$position === void 0 ? Positions.TOP_RIGHT : _ref2$position,\n      _ref2$size = _ref2.size,\n      size = _ref2$size === void 0 ? majorScale(1) : _ref2$size;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var positionProps = getPositionProps({\n    position: position,\n    size: size\n  });\n  var outerPadding = size * 0.25;\n  return /*#__PURE__*/React.createElement(Pane, _extends({\n    position: \"absolute\",\n    borderRadius: \"50%\",\n    backgroundColor: colors.blue100,\n    boxSizing: \"content-box\",\n    opacity: 0.7,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: outerPadding,\n    className: pulsarAnimationClassName\n  }, positionProps), /*#__PURE__*/React.createElement(Pane, {\n    width: size,\n    height: size,\n    backgroundColor: colors.blue200,\n    borderRadius: \"50%\",\n    opacity: 0.7\n  }));\n});\nPulsar.propTypes = {\n  /**\n   * The position of the pulsar\n   */\n  position: PropTypes.oneOf([Positions.TOP_LEFT, Positions.TOP_RIGHT, Positions.BOTTOM_LEFT, Positions.BOTTOM_RIGHT]),\n\n  /**\n   * The width/height of the dot\n   */\n  size: PropTypes.number\n};\nexport var Nudge = function Nudge(_ref3) {\n  var children = _ref3.children,\n      _ref3$isShown = _ref3.isShown,\n      isShown = _ref3$isShown === void 0 ? false : _ref3$isShown,\n      _ref3$position = _ref3.position,\n      position = _ref3$position === void 0 ? Positions.TOP_RIGHT : _ref3$position,\n      size = _ref3.size,\n      tooltipContent = _ref3.tooltipContent;\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    content: tooltipContent,\n    position: position,\n    isShown: isShown ? undefined : false\n  }, /*#__PURE__*/React.createElement(Pane, {\n    position: \"relative\"\n  }, isShown && /*#__PURE__*/React.createElement(Pulsar, {\n    position: position,\n    size: size\n  }), children));\n};\nNudge.displayName = \"Nudge\";\nNudge.propTypes = {\n  /**\n   * The position for the Puslar and the Tooltip\n   */\n  position: PropTypes.oneOf([Positions.TOP_LEFT, Positions.TOP_RIGHT, Positions.BOTTOM_LEFT, Positions.BOTTOM_RIGHT]),\n\n  /**\n   * Size of the Pulsar\n   */\n  size: Pulsar.propTypes.size,\n\n  /**\n   * Wether or not the Pulsar/Tooltip is shown\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Content for the tooltip\n   */\n  tooltipContent: Tooltip.propTypes.content,\n\n  /**\n   * Content for the pulsar/tooltip to be anchored too\n   */\n  children: PropTypes.node\n};","map":{"version":3,"sources":["../../../src/nudge/src/Nudge.js"],"names":["pulseAnimation","transform","animationTiming","animationDuration","pulsarAnimationClassName","animation","POSITION_KEYS","Positions","getPositionProps","position","size","keys","props","isYAxisKey","key","Pulsar","memo","TOP_RIGHT","majorScale","colors","useTheme","positionProps","outerPadding","PropTypes","number","Nudge","children","isShown","tooltipContent","Tooltip","node"],"mappings":"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","sourcesContent":["import React, { memo } from 'react'\nimport { css } from 'glamor'\nimport PropTypes from 'prop-types'\nimport Positions from '../../constants/src/Position'\nimport { Pane } from '../../layers'\nimport { majorScale } from '../../scales'\nimport { useTheme } from '../../theme'\nimport { Tooltip } from '../../tooltip'\n\nconst pulseAnimation = css.keyframes('pulseAnimation', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '50%': {\n    transform: 'scale(1.9)'\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n})\n\nconst animationTiming = 'cubic-bezier(0, 0, 0.58, 1)'\nconst animationDuration = '1.8s'\n\nconst pulsarAnimationClassName = css({\n  animation: `${pulseAnimation} ${animationDuration} ${animationTiming} both infinite`\n}).toString()\n\nconst POSITION_KEYS = {\n  [Positions.TOP_LEFT]: ['top', 'left'],\n  [Positions.TOP_RIGHT]: ['top', 'right'],\n  [Positions.BOTTOM_LEFT]: ['bottom', 'left'],\n  [Positions.BOTTOM_RIGHT]: ['bottom', 'right']\n}\n\nconst getPositionProps = ({ position, size }) => {\n  const keys = POSITION_KEYS[position]\n  const props = {}\n\n  keys.forEach(key => {\n    const isYAxisKey = key === 'top' || key === 'bottom'\n\n    if (isYAxisKey) {\n      props[key] = -(size / 2)\n    } else {\n      props[key] = -size\n    }\n  })\n\n  return props\n}\n\nexport const Pulsar = memo(({ position = Positions.TOP_RIGHT, size = majorScale(1) }) => {\n  const { colors } = useTheme()\n  const positionProps = getPositionProps({ position, size })\n  const outerPadding = size * 0.25\n\n  return (\n    <Pane\n      position=\"absolute\"\n      borderRadius=\"50%\"\n      backgroundColor={colors.blue100}\n      boxSizing=\"content-box\"\n      opacity={0.7}\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      padding={outerPadding}\n      className={pulsarAnimationClassName}\n      {...positionProps}\n    >\n      <Pane width={size} height={size} backgroundColor={colors.blue200} borderRadius=\"50%\" opacity={0.7} />\n    </Pane>\n  )\n})\n\nPulsar.propTypes = {\n  /**\n   * The position of the pulsar\n   */\n  position: PropTypes.oneOf([Positions.TOP_LEFT, Positions.TOP_RIGHT, Positions.BOTTOM_LEFT, Positions.BOTTOM_RIGHT]),\n\n  /**\n   * The width/height of the dot\n   */\n  size: PropTypes.number\n}\n\nexport const Nudge = ({ children, isShown = false, position = Positions.TOP_RIGHT, size, tooltipContent }) => {\n  return (\n    <Tooltip content={tooltipContent} position={position} isShown={isShown ? undefined : false}>\n      <Pane position=\"relative\">\n        {isShown && <Pulsar position={position} size={size} />}\n        {children}\n      </Pane>\n    </Tooltip>\n  )\n}\n\nNudge.propTypes = {\n  /**\n   * The position for the Puslar and the Tooltip\n   */\n  position: PropTypes.oneOf([Positions.TOP_LEFT, Positions.TOP_RIGHT, Positions.BOTTOM_LEFT, Positions.BOTTOM_RIGHT]),\n\n  /**\n   * Size of the Pulsar\n   */\n  size: Pulsar.propTypes.size,\n\n  /**\n   * Wether or not the Pulsar/Tooltip is shown\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Content for the tooltip\n   */\n  tooltipContent: Tooltip.propTypes.content,\n\n  /**\n   * Content for the pulsar/tooltip to be anchored too\n   */\n  children: PropTypes.node\n}\n"]},"metadata":{},"sourceType":"module"}