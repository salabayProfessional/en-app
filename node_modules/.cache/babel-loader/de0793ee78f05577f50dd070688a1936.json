{"ast":null,"code":"import _toConsumableArray from\"/Users/macbookpro/Documents/GitHub/en-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{createSlice}from'@reduxjs/toolkit';var initialState={start:false,test:null,infoTest:\"\",allTests:[]};var tests=createSlice({name:\"tests\",initialState:initialState,reducers:{set_start_test:function set_start_test(state,action){state.start=action.payload;},set_test:function set_test(state,action){state.test=action.payload;},reset_test:function reset_test(state){state.test=null;},set_info_id:function set_info_id(state,_ref){var payload=_ref.payload;state.infoTest=payload;},create_test:function create_test(state,_ref2){var payload=_ref2.payload;state.allTests=[].concat(_toConsumableArray(state.allTests),[payload]);},delete_tests:function delete_tests(state){state.allTests=[];},delete_test:function delete_test(state,_ref3){var payload=_ref3.payload;var name=payload.name;var index=state.allTests.findIndex(function(test){return test.name===name;});var before=state.allTests.slice(0,index);var after=state.allTests.slice(index);state.allTests=[].concat(_toConsumableArray(before),_toConsumableArray(after));}},extraReducers:function extraReducers(state){return state;}});var _tests$actions=tests.actions,set_start_test=_tests$actions.set_start_test,set_test=_tests$actions.set_test,set_info_id=_tests$actions.set_info_id,create_test=_tests$actions.create_test,reset_test=_tests$actions.reset_test,delete_test=_tests$actions.delete_test,delete_tests=_tests$actions.delete_tests;export{set_start_test,set_test,set_info_id,create_test,reset_test,delete_test,delete_tests};export default tests.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/store/slices/testsReducer.ts"],"names":["createSlice","initialState","start","test","infoTest","allTests","tests","name","reducers","set_start_test","state","action","payload","set_test","reset_test","set_info_id","create_test","delete_tests","delete_test","index","findIndex","before","slice","after","extraReducers","actions","reducer"],"mappings":"wKAAA,OAAQA,WAAR,KAA0B,kBAA1B,CAGA,GAAMC,CAAAA,YAA0B,CAAG,CACjCC,KAAK,CAAE,KAD0B,CAEjCC,IAAI,CAAE,IAF2B,CAGjCC,QAAQ,CAAE,EAHuB,CAIjCC,QAAQ,CAAE,EAJuB,CAAnC,CAOA,GAAMC,CAAAA,KAAK,CAAGN,WAAW,CAAC,CACxBO,IAAI,CAAE,OADkB,CAExBN,YAAY,CAAZA,YAFwB,CAGxBO,QAAQ,CAAE,CACRC,cAAc,CAAE,wBAACC,KAAD,CAAQC,MAAR,CAAmB,CACjCD,KAAK,CAACR,KAAN,CAAcS,MAAM,CAACC,OAArB,CACD,CAHO,CAIRC,QAAQ,CAAE,kBAACH,KAAD,CAAQC,MAAR,CAAmB,CAC3BD,KAAK,CAACP,IAAN,CAAaQ,MAAM,CAACC,OAApB,CACD,CANO,CAORE,UAAU,CAAE,oBAACJ,KAAD,CAAW,CACrBA,KAAK,CAACP,IAAN,CAAa,IAAb,CACD,CATO,CAURY,WAAW,CAAE,qBAACL,KAAD,MAAsB,IAAbE,CAAAA,OAAa,MAAbA,OAAa,CACjCF,KAAK,CAACN,QAAN,CAAiBQ,OAAjB,CACD,CAZO,CAaRI,WAAW,CAAE,qBAACN,KAAD,OAAsB,IAAbE,CAAAA,OAAa,OAAbA,OAAa,CACjCF,KAAK,CAACL,QAAN,8BAAqBK,KAAK,CAACL,QAA3B,GAAqCO,OAArC,GACD,CAfO,CAgBRK,YAAY,CAAE,sBAACP,KAAD,CAAW,CACvBA,KAAK,CAACL,QAAN,CAAiB,EAAjB,CACD,CAlBO,CAmBRa,WAAW,CAAE,qBAACR,KAAD,OAAsB,IAAbE,CAAAA,OAAa,OAAbA,OAAa,CACjC,GAAML,CAAAA,IAAI,CAAGK,OAAO,CAACL,IAArB,CACA,GAAMY,CAAAA,KAAK,CAAGT,KAAK,CAACL,QAAN,CAAee,SAAf,CAAyB,SAACjB,IAAD,QAAeA,CAAAA,IAAI,CAACI,IAAL,GAAcA,IAA7B,EAAzB,CAAd,CACA,GAAMc,CAAAA,MAAM,CAAGX,KAAK,CAACL,QAAN,CAAeiB,KAAf,CAAqB,CAArB,CAAwBH,KAAxB,CAAf,CACA,GAAMI,CAAAA,KAAK,CAAGb,KAAK,CAACL,QAAN,CAAeiB,KAAf,CAAqBH,KAArB,CAAd,CACAT,KAAK,CAACL,QAAN,8BAAqBgB,MAArB,qBAAgCE,KAAhC,GACD,CAzBO,CAHc,CA8BxBC,aAAa,CAAE,uBAACd,KAAD,QAAgBA,CAAAA,KAAhB,EA9BS,CAAD,CAAzB,CAgCO,mBAQHJ,KAAK,CAACmB,OARH,CACLhB,cADK,gBACLA,cADK,CAELI,QAFK,gBAELA,QAFK,CAGLE,WAHK,gBAGLA,WAHK,CAILC,WAJK,gBAILA,WAJK,CAKLF,UALK,gBAKLA,UALK,CAMLI,WANK,gBAMLA,WANK,CAOLD,YAPK,gBAOLA,YAPK,C,4FAUP,cAAeX,CAAAA,KAAK,CAACoB,OAArB","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport { TestsReducer } from './types';\n\nconst initialState: TestsReducer = {\n  start: false,\n  test: null,\n  infoTest: \"\",\n  allTests: [], \n};\n\nconst tests = createSlice({\n  name: \"tests\",\n  initialState,\n  reducers: {\n    set_start_test: (state, action) => {\n      state.start = action.payload;\n    },\n    set_test: (state, action) => {\n      state.test = action.payload;\n    },\n    reset_test: (state) => {\n      state.test = null;\n    },\n    set_info_id: (state, {payload}) => {\n      state.infoTest = payload;\n    },\n    create_test: (state, {payload}) => {\n      state.allTests = [...state.allTests, payload];\n    },\n    delete_tests: (state) => {\n      state.allTests = [];\n    },\n    delete_test: (state, {payload}) => {\n      const name = payload.name;\n      const index = state.allTests.findIndex((test: any) => test.name === name);\n      const before = state.allTests.slice(0, index);\n      const after = state.allTests.slice(index, );\n      state.allTests = [...before, ...after];\n    },\n  },\n  extraReducers: (state: any) => state\n});\nexport const { \n  set_start_test, \n  set_test, \n  set_info_id, \n  create_test, \n  reset_test, \n  delete_test, \n  delete_tests \n} = tests.actions;\n\nexport default tests.reducer;"]},"metadata":{},"sourceType":"module"}