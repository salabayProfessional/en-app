{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Dictionary/Dictionary.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { shuffle } from '../../../../specialFunction/specialFunction';\nimport DictionaryOptions from './components/DictionaryOptions/DictionaryOptions';\nimport TableWords from './components/DictionaryPart/DictionaryPart';\nimport \"./Dictionary.scss\";\nimport Row from \"../../../../component/Row/Row\";\nimport { useAppSelector } from \"../../../../hooks/useRedux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dictionary = () => {\n  _s();\n\n  const [isList, setIsList] = useState(false);\n\n  const toggleList = () => setIsList(!isList);\n\n  const dictionaries = useAppSelector(state => state.dictionary.dictionaryTests);\n  const [activeDictionary, setActiveDictionary] = useState(dictionaries[0]);\n  const [isHideColumnUa, setIsHideColumnUa] = useState(false);\n  const [isHideColumnEn, setIsHideColumnEn] = useState(false);\n\n  const toggleHideColumnUa = () => setIsHideColumnUa(!isHideColumnUa);\n\n  const toggleHideColumnEn = () => setIsHideColumnEn(!isHideColumnEn);\n\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const toggleActiveItem = dictionary => {\n    if (dictionary.name === activeDictionary) {\n      return;\n    } else {\n      setActiveDictionary(dictionary);\n    }\n  };\n\n  const randomDictionaryWords = activeDictionary => {\n    setActiveDictionary({\n      name: activeDictionary.name,\n      words: shuffle(activeDictionary.words)\n    });\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dictionary\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        Left: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-words\",\n          children: /*#__PURE__*/_jsxDEV(TableWords, {\n            activeDictionary: activeDictionary,\n            register: register,\n            isHideColumnUa: isHideColumnUa,\n            isHideColumnEn: isHideColumnEn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this),\n        Right: /*#__PURE__*/_jsxDEV(DictionaryOptions, {\n          isList: isList,\n          activeDictionary: activeDictionary,\n          randomDictionaryWords: randomDictionaryWords,\n          toggleActiveItem: toggleActiveItem,\n          toggleList: toggleList,\n          reset: reset,\n          toggleHideColumnUa: toggleHideColumnUa,\n          toggleHideColumnEn: toggleHideColumnEn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this),\n        rightWidth: 3,\n        leftWidth: 9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dictionary, \"an6PHV08VTqI4etRZPp/pL6W6g4=\", false, function () {\n  return [useAppSelector, useForm];\n});\n\n_c = Dictionary;\nexport default Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Dictionary/Dictionary.tsx"],"names":["React","useState","useForm","shuffle","DictionaryOptions","TableWords","Row","useAppSelector","Dictionary","isList","setIsList","toggleList","dictionaries","state","dictionary","dictionaryTests","activeDictionary","setActiveDictionary","isHideColumnUa","setIsHideColumnUa","isHideColumnEn","setIsHideColumnEn","toggleHideColumnUa","toggleHideColumnEn","register","handleSubmit","reset","toggleActiveItem","name","randomDictionaryWords","words","onSubmit","data","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { shuffle } from '../../../../specialFunction/specialFunction';\nimport DictionaryOptions from './components/DictionaryOptions/DictionaryOptions';\nimport TableWords from './components/DictionaryPart/DictionaryPart';\nimport \"./Dictionary.scss\";\nimport Row from \"../../../../component/Row/Row\";\nimport { useAppSelector } from \"../../../../hooks/useRedux\";\n\nconst Dictionary: React.FC = () => {\n  const [isList, setIsList] = useState(false);\n  const toggleList = () => setIsList(!isList);\n  const dictionaries = useAppSelector((state) => state.dictionary.dictionaryTests);\n  const [activeDictionary, setActiveDictionary] = useState<any>(dictionaries[0]);\n  const [isHideColumnUa, setIsHideColumnUa] = useState(false);\n  const [isHideColumnEn, setIsHideColumnEn] = useState(false);\n  const toggleHideColumnUa = () => setIsHideColumnUa(!isHideColumnUa);\n  const toggleHideColumnEn = () => setIsHideColumnEn(!isHideColumnEn);\n  const { register, handleSubmit, reset } = useForm();\n\n  interface DictionaryPart {name: string, words: {en: string, ua: string}}\n\n  const toggleActiveItem = (dictionary: DictionaryPart) => {\n    if(dictionary.name === activeDictionary) {\n      return\n    } else {\n      setActiveDictionary(dictionary);\n    }\n  }\n\n  const randomDictionaryWords = (activeDictionary: any) => {\n    setActiveDictionary({\n      name: activeDictionary.name, \n      words: shuffle(activeDictionary.words)\n    });\n  };\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"dictionary\">\n        <Row \n          Left={(\n            <div className=\"table-words\">\n              <TableWords \n                activeDictionary={activeDictionary} \n                register={register}\n                isHideColumnUa={isHideColumnUa}\n                isHideColumnEn={isHideColumnEn}\n              />\n            </div>\n          )}\n          Right={(\n            <DictionaryOptions \n                isList={isList}\n                activeDictionary={activeDictionary}\n                randomDictionaryWords={randomDictionaryWords}\n                toggleActiveItem={toggleActiveItem}\n                toggleList={toggleList}\n                reset={reset}\n                toggleHideColumnUa={toggleHideColumnUa}\n                toggleHideColumnEn={toggleHideColumnEn}\n            />\n          )}\n          rightWidth={3}\n          leftWidth={9}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default Dictionary;"]},"metadata":{},"sourceType":"module"}