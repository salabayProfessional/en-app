{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\nconst deleteEmentFromArr = (start, end, state) => {\n  return state.dictionaryTests = [...state.dictionaryTests.slice(0, end), ...state.dictionaryTests.slice(start + 1)];\n};\n\nconst initialState = {\n  dictionaryTests: []\n};\nconst dictionary = createSlice({\n  name: \"dictionary\",\n  initialState,\n  reducers: {\n    add_dictionary_part: (state, action) => {\n      state.dictionaryTests.push(action.payload);\n    },\n    delete_dictionary_part: (state, action) => {\n      const start = state.dictionaryTests.slice(0, action.payload.id);\n      const end = state.dictionaryTests.slice(action.payload.id + 1);\n      state.dictionaryTests = [...start, ...end];\n    }\n  },\n  extraReducers: state => state\n});\nexport const {\n  add_dictionary_part,\n  delete_dictionary_part\n} = dictionary.actions;\nexport default dictionary.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/store/slices/dictionaryReducer.ts"],"names":["createSlice","deleteEmentFromArr","start","end","state","dictionaryTests","slice","initialState","dictionary","name","reducers","add_dictionary_part","action","push","payload","delete_dictionary_part","id","extraReducers","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAgBC,GAAhB,EAA6BC,KAA7B,KAAuC;AAE9D,SAAOA,KAAK,CAACC,eAAN,GAAwB,CAAC,GAAGD,KAAK,CAACC,eAAN,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+BH,GAA/B,CAAJ,EAAyC,GAAGC,KAAK,CAACC,eAAN,CAAsBC,KAAtB,CAA4BJ,KAAK,GAAG,CAApC,CAA5C,CAA/B;AACH,CAHD;;AAKA,MAAMK,YAAiB,GAAG;AACtBF,EAAAA,eAAe,EAAE;AADK,CAA1B;AAIA,MAAMG,UAAU,GAAGR,WAAW,CAAC;AAC3BS,EAAAA,IAAI,EAAE,YADqB;AAE3BF,EAAAA,YAF2B;AAG3BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,mBAAmB,EAAE,CAACP,KAAD,EAAQQ,MAAR,KAAmB;AACpCR,MAAAA,KAAK,CAACC,eAAN,CAAsBQ,IAAtB,CAA2BD,MAAM,CAACE,OAAlC;AACH,KAHK;AAINC,IAAAA,sBAAsB,EAAE,CAACX,KAAD,EAAQQ,MAAR,KAAmB;AACvC,YAAMV,KAAK,GAAGE,KAAK,CAACC,eAAN,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+BM,MAAM,CAACE,OAAP,CAAeE,EAA9C,CAAd;AACA,YAAMb,GAAG,GAAGC,KAAK,CAACC,eAAN,CAAsBC,KAAtB,CAA4BM,MAAM,CAACE,OAAP,CAAeE,EAAf,GAAoB,CAAhD,CAAZ;AACAZ,MAAAA,KAAK,CAACC,eAAN,GAAwB,CAAC,GAAGH,KAAJ,EAAW,GAAGC,GAAd,CAAxB;AACH;AARK,GAHiB;AAa3Bc,EAAAA,aAAa,EAAGb,KAAD,IAAgBA;AAbJ,CAAD,CAA9B;AAgBA,OAAO,MAAM;AAAEO,EAAAA,mBAAF;AAAuBI,EAAAA;AAAvB,IAAkDP,UAAU,CAACU,OAAnE;AAEP,eAAeV,UAAU,CAACW,OAA1B","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nconst deleteEmentFromArr = (start: number, end: number, state) => {\n\n    return state.dictionaryTests = [...state.dictionaryTests.slice(0, end), ...state.dictionaryTests.slice(start + 1)];\n}\n\nconst initialState: any = {\n    dictionaryTests: [],\n}\n\nconst dictionary = createSlice({\n    name: \"dictionary\",\n    initialState,\n    reducers: {\n        add_dictionary_part: (state, action) => {\n            state.dictionaryTests.push(action.payload);\n        },\n        delete_dictionary_part: (state, action) => {\n            const start = state.dictionaryTests.slice(0, action.payload.id);\n            const end = state.dictionaryTests.slice(action.payload.id + 1);\n            state.dictionaryTests = [...start, ...end];\n        },\n    },\n    extraReducers: (state: any) => state\n});\n\nexport const { add_dictionary_part, delete_dictionary_part } = dictionary.actions;\n\nexport default dictionary.reducer;"]},"metadata":{},"sourceType":"module"}