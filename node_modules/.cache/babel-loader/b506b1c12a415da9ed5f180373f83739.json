{"ast":null,"code":"import _slicedToArray from\"/Users/macbookpro/Documents/GitHub/en-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch}from'react-redux';import{Redirect}from'react-router';import{generateString}from'../../specialFunction/specialFunction';import{set_test,create_test}from'../../store/slices/testsReducer';import CornModal from'./Modal';import{Formik,Form,Field}from\"formik\";import{Button,Table,FormGroup,ModalHeader,ModalBody}from'reactstrap';import{allWords}from\"../../mockData/words\";import\"./Modal.scss\";import{add_dictionary_part}from'../../store/slices/dictionaryReducer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ModalInfo=function ModalInfo(_ref){var isModal=_ref.isModal,toggle=_ref.toggle,test=_ref.test;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isPassTest=_useState2[0],setIsPassTest=_useState2[1];var dispatch=useDispatch();var passTest=function passTest(){toggle();setIsPassTest(!isPassTest);dispatch(set_test({name:test.name,words:test.words}));};if(isPassTest){return/*#__PURE__*/_jsx(Redirect,{to:\"/tests\"});};return/*#__PURE__*/_jsx(CornModal,{isModal:isModal,toggle:toggle,isCancel:true,isConfirm:true,confirm:passTest,isBody:true,children:/*#__PURE__*/_jsx(\"tbody\",{className:\"table-words\",children:test===null||test===void 0?void 0:test.words.map(function(word){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:word.en}),/*#__PURE__*/_jsx(\"td\",{children:word.ua})]},generateString());})})});};var ModalCreatedTest=function ModalCreatedTest(_ref2){var isModal=_ref2.isModal,toggle=_ref2.toggle,_ref2$create=_ref2.create,create=_ref2$create===void 0?\"test\":_ref2$create;var dispatch=useDispatch();var initialValues={name:\"\",words:[],options:{amount:10,type:\"en-ua\",timer:60}};var allWordsList=allWords.map(function(word,idx){return/*#__PURE__*/_jsxs(\"tr\",{className:\"line-top\",children:[/*#__PURE__*/_jsx(\"td\",{children:word.en}),/*#__PURE__*/_jsx(\"td\",{children:word.ua}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(Field,{type:\"checkbox\",value:word.en})})]},\"list-success-\".concat(idx));});var _onSubmit=function onSubmit(values){if(create===\"test\"){dispatch(create_test({name:values.name,words:values.words,type:\"en-ua\",options:values.options}));}else{dispatch(add_dictionary_part({name:values.name,words:values.words}));}toggle();};return/*#__PURE__*/_jsx(CornModal,{isModal:isModal,toggle:toggle,isCancel:true,isConfirm:true,children:/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,onSubmit:function onSubmit(values){return _onSubmit(values);},children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"tbody\",{className:\"table-words padding-5\",children:allWordsList}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(\"div\",{className:\"input__name\",children:/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",placeholder:\"name\"})})})]})})});};var ModalNotice=function ModalNotice(_ref3){var isModal=_ref3.isModal,toggle=_ref3.toggle;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),redirect=_useState4[0],setRedirect=_useState4[1];if(redirect){return/*#__PURE__*/_jsx(Redirect,{to:\"/profile/results\"});}return/*#__PURE__*/_jsxs(CornModal,{isModal:isModal,toggle:toggle,isBody:true,children:[/*#__PURE__*/_jsx(ModalHeader,{toggle:toggle,children:\"See result\"}),/*#__PURE__*/_jsx(Button,{color:\"btn btn-outline-success\",style:{width:\"100%\"},onClick:function onClick(){setRedirect(true);toggle();},children:\"To look\"})]});};var ModalResult=function ModalResult(_ref4){var isModal=_ref4.isModal,toggle=_ref4.toggle,result=_ref4.result;var dispatch=useDispatch();var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isRepass=_useState6[0],setIsRepass=_useState6[1];var repass=function repass(){return setIsRepass(true);};var list=result===null||result===void 0?void 0:result.words.map(function(word,idx){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:word.en}),/*#__PURE__*/_jsx(\"td\",{children:word.ua}),/*#__PURE__*/_jsx(\"td\",{children:result.answers[idx]})]},generateString());});var repassTest=function repassTest(){dispatch(set_test({name:result.name,words:result.words}));repass();};if(isRepass){return/*#__PURE__*/_jsx(Redirect,{to:\"/tests\"});};return/*#__PURE__*/_jsx(CornModal,{isModal:isModal,toggle:toggle,isBody:false,isConfirm:true,confirm:repassTest,confirmName:\"Repass\",children:/*#__PURE__*/_jsxs(ModalBody,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:result===null||result===void 0?void 0:result.name}),/*#__PURE__*/_jsx(Table,{className:\"table-words\",children:/*#__PURE__*/_jsx(\"tbody\",{children:list})}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom-panel\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bottom-panel__inner\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"inline-block\",children:\"type: en-ua\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"inline-block\",children:[\"true: \",result===null||result===void 0?void 0:result.result.length]}),/*#__PURE__*/_jsx(\"span\",{className:\"inline-block\",children:\"timer: 60\"})]})})]})});};export{ModalInfo,ModalCreatedTest,ModalNotice,ModalResult};","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/component/Modal/Modals.tsx"],"names":["React","useState","useDispatch","Redirect","generateString","set_test","create_test","CornModal","Formik","Form","Field","Button","Table","FormGroup","ModalHeader","ModalBody","allWords","add_dictionary_part","ModalInfo","isModal","toggle","test","isPassTest","setIsPassTest","dispatch","passTest","name","words","map","word","en","ua","ModalCreatedTest","create","initialValues","options","amount","type","timer","allWordsList","idx","onSubmit","values","ModalNotice","redirect","setRedirect","width","ModalResult","result","isRepass","setIsRepass","repass","list","answers","repassTest","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { generateString } from '../../specialFunction/specialFunction';\nimport { set_test, create_test } from '../../store/slices/testsReducer';\nimport CornModal from './Modal';\nimport { InitialValuesModalCreate, ModalInfoTypes, ModalType } from './types';\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, Table, FormGroup, ModalHeader, ModalBody } from 'reactstrap';\nimport { allWords } from \"../../mockData/words\";\nimport \"./Modal.scss\";\nimport { add_dictionary_part } from '../../store/slices/dictionaryReducer';\n\nconst ModalInfo: React.FC<ModalInfoTypes> = ({\n  isModal, \n  toggle,\n  test,\n}) => {\n  const [isPassTest, setIsPassTest] = useState(false);\n  const dispatch = useDispatch();\n\n  const passTest = () => {\n    toggle();\n    setIsPassTest(!isPassTest);\n    dispatch(set_test({name: test.name, words: test.words}));\n  };\n\n  if(isPassTest) {\n    return <Redirect to=\"/tests\" />\n  };\n\n  return (\n    <CornModal \n      isModal={isModal} \n      toggle={toggle} \n      isCancel \n      isConfirm \n      confirm={passTest}\n      isBody\n    >\n      <tbody className=\"table-words\">\n        {\n          test?.words.map((word: {en: string, ua: string}) => {\n            return (\n              <tr key={generateString()}>\n                <td>{word.en}</td>\n                <td>{word.ua}</td>\n              </tr>\n            )\n          })\n        }\n      </tbody>\n   </CornModal>\n  );\n};\n\nconst ModalCreatedTest: React.FC<ModalType> = ({\n  isModal, \n  toggle,\n  create = \"test\",\n}) => {\n  const dispatch = useDispatch();\n\n  const initialValues: InitialValuesModalCreate = {\n    name: \"\",\n    words: [],\n    options: {\n      amount: 10,\n      type: \"en-ua\",\n      timer: 60,\n    },\n  }\n\n  const allWordsList = allWords.map((word: {en: string, ua: string}, idx: number) => {\n    return (\n      <tr key={`list-success-${idx}`} className=\"line-top\">\n        <td>{word.en}</td>\n        <td>{word.ua}</td>\n        <th><Field type=\"checkbox\" value={word.en}/></th>\n      </tr>\n    ) \n  });\n\n  const onSubmit = (values: InitialValuesModalCreate) => {\n    if(create === \"test\") {\n      dispatch(create_test({\n        name: values.name,\n        words: values.words,\n        type: \"en-ua\",\n        options: values.options\n      }));\n    } else {\n      dispatch(add_dictionary_part({\n        name: values.name,\n        words: values.words,\n      }));\n    }\n    toggle();\n  }\n\n  return (\n    <CornModal\n      isModal={isModal} \n      toggle={toggle} \n      isCancel \n      isConfirm \n    >\n      <Formik initialValues={initialValues} onSubmit={(values) => onSubmit(values)} >\n        <Form>\n          <tbody className=\"table-words padding-5\">\n            { allWordsList }\n          </tbody>\n          <FormGroup>\n            <div className=\"input__name\">\n              <input className=\"form-control\" type=\"text\" placeholder=\"name\"/>\n            </div>\n          </FormGroup>\n        </Form>\n      </Formik>\n    </CornModal>\n  );\n};\n\nconst ModalNotice: React.FC<ModalType> = ({isModal, toggle}) => {\n\n  const [redirect, setRedirect] = useState(false);\n\n  if(redirect) {\n    return <Redirect to=\"/profile/results\" />\n  }\n\n  return (\n    <CornModal isModal={isModal} toggle={toggle} isBody>\n      <ModalHeader toggle={toggle}>See result</ModalHeader>\n        <Button color=\"btn btn-outline-success\" style={{width: \"100%\"}} onClick={() => {\n          setRedirect(true);\n          toggle();\n        }}>To look</Button>\n    </CornModal>\n  )\n};\n\nconst ModalResult: React.FC<{\n  isModal: boolean,\n  toggle: () => void,\n  result: any\n}> = ({\n  isModal, \n  toggle,\n  result,\n}) => {\n  const dispatch = useDispatch();\n  const [isRepass, setIsRepass] = useState(false);\n\n  const repass = () => setIsRepass(true);\n\n  const list = result?.words.map((word: any, idx: number) => {\n    return (\n      <tr key={generateString()}>\n        <td>{word.en}</td>\n        <td>{word.ua}</td>\n        <td>{result.answers[idx]}</td>\n      </tr>\n    );\n  });\n\n  const repassTest = () => {\n    dispatch(set_test({name: result.name, words: result.words}));\n    repass();\n  };\n\n  if(isRepass) {\n    return <Redirect to=\"/tests\"/>\n  };\n\n  return (\n      <CornModal \n        isModal={isModal} \n        toggle={toggle} \n        isBody={false} \n        isConfirm\n        confirm={repassTest}\n        confirmName=\"Repass\"\n      >\n        <ModalBody>\n          <h2 className=\"title\">{result?.name}</h2>\n          <Table className=\"table-words\">\n            <tbody>\n                {list}\n            </tbody>\n          </Table>\n          <div className=\"bottom-panel\"> \n            <div className=\"bottom-panel__inner\">\n              <span className=\"inline-block\">type: en-ua</span>\n              <span className=\"inline-block\">true: {result?.result.length}</span>\n              <span className=\"inline-block\">timer: 60</span>\n            </div>\n          </div>\n        </ModalBody>\n      </CornModal>\n  );\n};\n\nexport { \n  ModalInfo,\n  ModalCreatedTest,\n  ModalNotice,\n  ModalResult,\n};"]},"metadata":{},"sourceType":"module"}