{"ast":null,"code":"import _slicedToArray from\"/Users/macbookpro/Documents/GitHub/en-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{ModalCreatedTest}from'../../../../../../component/Modal/Modals';import{Table}from'reactstrap';import{generateString}from'../../../../../../specialFunction/specialFunction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DictionaryOptions=function DictionaryOptions(_ref){var isList=_ref.isList,activeDictionary=_ref.activeDictionary,toggleList=_ref.toggleList,randomDictionaryWords=_ref.randomDictionaryWords,toggleActiveItem=_ref.toggleActiveItem,reset=_ref.reset,toggleHideColumnUa=_ref.toggleHideColumnUa,toggleHideColumnEn=_ref.toggleHideColumnEn;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isModal=_useState2[0],setIsModal=_useState2[1];var toggleIsModal=function toggleIsModal(){return setIsModal(!isModal);};var list=activeDictionary===null||activeDictionary===void 0?void 0:activeDictionary.map(function(item){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"tbody\",{onClick:function onClick(){return toggleActiveItem(item);},children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"th\",{scope:\"row\",children:item.name})})},generateString()),activeDictionary.name===item.name&&/*#__PURE__*/_jsxs(\"div\",{className:\"active-option\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-success top-10\",onClick:function onClick(){return randomDictionaryWords(activeDictionary);},children:\"RANDOM\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-success top-10\",onClick:function onClick(){return reset();},children:\"CLEAR ANSWER\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-success top-10\",onClick:function onClick(){return toggleHideColumnUa();},children:\"HIDE UA COLUMN\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-success top-10\",onClick:function onClick(){return toggleHideColumnEn();},children:\"HIDE EN COLUMN\"})]})]});});return/*#__PURE__*/_jsxs(\"div\",{className:\"dictionary-options\",children:[/*#__PURE__*/_jsx(ModalCreatedTest,{toggle:toggleIsModal,isModal:isModal}),/*#__PURE__*/_jsx(\"div\",{className:\"dictionary-options__party\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"filter\",className:\"form-control btn-bg\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"dictionary-options__party\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-success btn-100\",onClick:toggleIsModal,children:\"Add new dictionary\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"dictionary-options__party\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-success btn-100\",children:\"DELETE\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dictionary-options__party\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-success btn-100\",onClick:function onClick(){return toggleList();},children:\"List\"}),isList&&/*#__PURE__*/_jsx(Table,{hover:true,children:list})]})]});};export default DictionaryOptions;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Dictionary/components/DictionaryOptions/DictionaryOptions.tsx"],"names":["React","useState","ModalCreatedTest","Table","generateString","DictionaryOptions","isList","activeDictionary","toggleList","randomDictionaryWords","toggleActiveItem","reset","toggleHideColumnUa","toggleHideColumnEn","isModal","setIsModal","toggleIsModal","list","map","item","name"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,gBAAT,KAAiC,0CAAjC,CACA,OAASC,KAAT,KAAsB,YAAtB,CACA,OAASC,cAAT,KAA+B,mDAA/B,C,6IAEA,GAAMC,CAAAA,iBAAgC,CAAG,QAAnCA,CAAAA,iBAAmC,MASnC,IARJC,CAAAA,MAQI,MARJA,MAQI,CAPJC,gBAOI,MAPJA,gBAOI,CANJC,UAMI,MANJA,UAMI,CALJC,qBAKI,MALJA,qBAKI,CAJJC,gBAII,MAJJA,gBAII,CAHJC,KAGI,MAHJA,KAGI,CAFJC,kBAEI,MAFJA,kBAEI,CADJC,kBACI,MADJA,kBACI,CACJ,cAA8BZ,QAAQ,CAAC,KAAD,CAAtC,wCAAOa,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAMD,CAAAA,UAAU,CAAC,CAACD,OAAF,CAAhB,EAAtB,CAEA,GAAMG,CAAAA,IAAI,CAAGV,gBAAH,SAAGA,gBAAH,iBAAGA,gBAAgB,CAAEW,GAAlB,CAAsB,SAACC,IAAD,CAAe,CAChD,mBACE,wCACE,cAAO,OAAO,CAAE,yBAAMT,CAAAA,gBAAgB,CAACS,IAAD,CAAtB,EAAhB,uBACE,iCACE,WAAI,KAAK,CAAC,KAAV,UACGA,IAAI,CAACC,IADR,EADF,EADF,EAAmDhB,cAAc,EAAjE,CADF,CASGG,gBAAgB,CAACa,IAAjB,GAA0BD,IAAI,CAACC,IAA/B,eACC,aAAK,SAAS,CAAC,eAAf,wBACE,eAAQ,SAAS,CAAC,gCAAlB,CAAmD,OAAO,CAAE,yBAAMX,CAAAA,qBAAqB,CAACF,gBAAD,CAA3B,EAA5D,oBADF,cAEE,eAAQ,SAAS,CAAC,gCAAlB,CAAmD,OAAO,CAAE,yBAAMI,CAAAA,KAAK,EAAX,EAA5D,0BAFF,cAGE,eAAQ,SAAS,CAAC,gCAAlB,CAAmD,OAAO,CAAE,yBAAMC,CAAAA,kBAAkB,EAAxB,EAA5D,4BAHF,cAIE,eAAQ,SAAS,CAAC,gCAAlB,CAAmD,OAAO,CAAE,yBAAMC,CAAAA,kBAAkB,EAAxB,EAA5D,4BAJF,GAVJ,GADF,CAqBD,CAtBY,CAAb,CAwBA,mBACE,aAAK,SAAS,CAAC,oBAAf,wBACE,KAAC,gBAAD,EAAkB,MAAM,CAAEG,aAA1B,CAAyC,OAAO,CAAEF,OAAlD,EADF,cAEE,YAAK,SAAS,CAAC,2BAAf,uBACE,cAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAC,QAA/B,CAAwC,SAAS,CAAC,qBAAlD,EADF,EAFF,cAKE,YAAK,SAAS,CAAC,2BAAf,uBACE,eAAQ,SAAS,CAAC,iCAAlB,CAAoD,OAAO,CAAEE,aAA7D,gCADF,EALF,cAQE,YAAK,SAAS,CAAC,2BAAf,uBACE,eAAQ,SAAS,CAAC,iCAAlB,oBADF,EARF,cAWE,aAAK,SAAS,CAAC,2BAAf,wBACE,eAAQ,SAAS,CAAC,iCAAlB,CAAoD,OAAO,CAAE,yBAAMR,CAAAA,UAAU,EAAhB,EAA7D,kBADF,CAGIF,MAAM,eACJ,KAAC,KAAD,EAAO,KAAK,KAAZ,UAEIW,IAFJ,EAJN,GAXF,GADF,CA0BD,CA/DD,CAiEA,cAAeZ,CAAAA,iBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ModalCreatedTest } from '../../../../../../component/Modal/Modals'\nimport { Table } from 'reactstrap';\nimport { generateString } from '../../../../../../specialFunction/specialFunction';\n\nconst DictionaryOptions: React.FC<any> = ({\n  isList, \n  activeDictionary, \n  toggleList, \n  randomDictionaryWords,\n  toggleActiveItem,\n  reset,\n  toggleHideColumnUa,\n  toggleHideColumnEn\n}) => {\n  const [isModal, setIsModal] = useState(false);\n  const toggleIsModal = () => setIsModal(!isModal);\n\n  const list = activeDictionary?.map((item: any) => {\n    return (\n      <>\n        <tbody onClick={() => toggleActiveItem(item)} key={generateString()}>\n          <tr>\n            <th scope=\"row\">\n              {item.name}\n            </th>\n          </tr>\n        </tbody>\n       {\n         activeDictionary.name === item.name && (\n          <div className=\"active-option\">\n            <button className=\"btn btn-outline-success top-10\" onClick={() => randomDictionaryWords(activeDictionary)}>RANDOM</button>\n            <button className=\"btn btn-outline-success top-10\" onClick={() => reset()}>CLEAR ANSWER</button>\n            <button className=\"btn btn-outline-success top-10\" onClick={() => toggleHideColumnUa()}>HIDE UA COLUMN</button>\n            <button className=\"btn btn-outline-success top-10\" onClick={() => toggleHideColumnEn()}>HIDE EN COLUMN</button>\n          </div>\n         )\n       }\n      </>\n    )\n  });\n\n  return (\n    <div className=\"dictionary-options\">\n      <ModalCreatedTest toggle={toggleIsModal} isModal={isModal} />\n      <div className=\"dictionary-options__party\">\n        <input type=\"text\" placeholder=\"filter\" className=\"form-control btn-bg\" />\n      </div>\n      <div className=\"dictionary-options__party\">\n        <button className=\"btn btn-outline-success btn-100\" onClick={toggleIsModal}>Add new dictionary</button>\n      </div>\n      <div className=\"dictionary-options__party\">\n        <button className=\"btn btn-outline-success btn-100\">DELETE</button>\n      </div>\n      <div className=\"dictionary-options__party\">\n        <button className=\"btn btn-outline-success btn-100\" onClick={() => toggleList()}>List</button>\n        {\n          isList && (\n            <Table hover>\n              {\n                list\n              }\n            </Table>\n          )\n        }\n      </div>\n    </div>\n  )\n};\n\nexport default DictionaryOptions;\n"]},"metadata":{},"sourceType":"module"}