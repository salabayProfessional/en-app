{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\nconst findPart = (partName, state) => state.dictionary.findIndex(item => item.part === partName);\n\nconst foundWord = (word, state, partIdx) => state.dictionary[partIdx].words.findIndex(item => item.word === word);\n\nconst initialState = {\n  authentication: true,\n  role: \"admin\",\n  name: \"oleg\",\n  surname: \"salabay\",\n  email: \"olegsalabaymac@gmail.com\",\n  photo: \"\",\n  describe: \"\",\n  password: \"1234\",\n  dictionary: [],\n  homework: []\n};\nconst auth = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    log_out: state => {\n      state.authentication = false;\n    },\n    sign_in: state => {\n      state.authentication = true;\n    },\n    add_part_own_dictionary: (state, {\n      payload\n    }) => {\n      state.dictionary = [...state.dictionary, payload];\n    },\n    add_word_own_dictionary: (state, {\n      payload\n    }) => {\n      const length = state.dictionary.length;\n      state.dictionary.words = [...state.dictionary.words, ...payload.word];\n    },\n    setRole: (state, {\n      payload\n    }) => {\n      state.role = payload;\n    },\n    add_home_work: (state, {\n      payload\n    }) => {\n      state.homework = [...state.homework, payload];\n    }\n  }\n});\nconst {\n  log_out,\n  sign_in,\n  add_word_own_dictionary,\n  add_part_own_dictionary,\n  add_home_work,\n  setRole\n} = auth.actions;\nexport { log_out, sign_in, add_word_own_dictionary, add_part_own_dictionary, add_home_work, setRole };\nexport default auth.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/store/slices/authReducer.ts"],"names":["createSlice","findPart","partName","state","dictionary","findIndex","item","part","foundWord","word","partIdx","words","initialState","authentication","role","name","surname","email","photo","describe","password","homework","auth","reducers","log_out","sign_in","add_part_own_dictionary","payload","add_word_own_dictionary","length","setRole","add_home_work","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;;AAGA,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAmBC,KAAnB,KAA0CA,KAAK,CAACC,UAAN,CAAiBC,SAAjB,CAA4BC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcL,QAAnD,CAA3D;;AACA,MAAMM,SAAS,GAAG,CAACC,IAAD,EAAeN,KAAf,EAAmCO,OAAnC,KAAuDP,KAAK,CAACC,UAAN,CAAiBM,OAAjB,EAA0BC,KAA1B,CAAgCN,SAAhC,CAA2CC,IAAD,IAAUA,IAAI,CAACG,IAAL,KAAcA,IAAlE,CAAzE;;AAEA,MAAMG,YAAyB,GAAG;AAChCC,EAAAA,cAAc,EAAE,IADgB;AAEhCC,EAAAA,IAAI,EAAE,OAF0B;AAGhCC,EAAAA,IAAI,EAAE,MAH0B;AAIhCC,EAAAA,OAAO,EAAE,SAJuB;AAKhCC,EAAAA,KAAK,EAAE,0BALyB;AAMhCC,EAAAA,KAAK,EAAE,EANyB;AAOhCC,EAAAA,QAAQ,EAAE,EAPsB;AAQhCC,EAAAA,QAAQ,EAAE,MARsB;AAShChB,EAAAA,UAAU,EAAE,EAToB;AAUhCiB,EAAAA,QAAQ,EAAE;AAVsB,CAAlC;AAaA,MAAMC,IAAI,GAAGtB,WAAW,CAAC;AACrBe,EAAAA,IAAI,EAAE,MADe;AAErBH,EAAAA,YAFqB;AAGrBW,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAGrB,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACU,cAAN,GAAuB,KAAvB;AACD,KAHO;AAIRY,IAAAA,OAAO,EAAGtB,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACU,cAAN,GAAuB,IAAvB;AACD,KANO;AAORa,IAAAA,uBAAuB,EAAE,CAACvB,KAAD,EAAQ;AAACwB,MAAAA;AAAD,KAAR,KAAsB;AAC7CxB,MAAAA,KAAK,CAACC,UAAN,GAAmB,CAAC,GAAGD,KAAK,CAACC,UAAV,EAAsBuB,OAAtB,CAAnB;AACD,KATO;AAURC,IAAAA,uBAAuB,EAAE,CAACzB,KAAD,EAAQ;AAACwB,MAAAA;AAAD,KAAR,KAAsB;AAC7C,YAAME,MAAM,GAAG1B,KAAK,CAACC,UAAN,CAAiByB,MAAhC;AACA1B,MAAAA,KAAK,CAACC,UAAN,CAAiBO,KAAjB,GAAyB,CAAC,GAAGR,KAAK,CAACC,UAAN,CAAiBO,KAArB,EAA4B,GAAGgB,OAAO,CAAClB,IAAvC,CAAzB;AACD,KAbO;AAcRqB,IAAAA,OAAO,EAAE,CAAC3B,KAAD,EAAQ;AAACwB,MAAAA;AAAD,KAAR,KAAsB;AAC7BxB,MAAAA,KAAK,CAACW,IAAN,GAAaa,OAAb;AACD,KAhBO;AAiBRI,IAAAA,aAAa,EAAE,CAAC5B,KAAD,EAAQ;AAACwB,MAAAA;AAAD,KAAR,KAAsB;AACnCxB,MAAAA,KAAK,CAACkB,QAAN,GAAiB,CAAC,GAAGlB,KAAK,CAACkB,QAAV,EAAoBM,OAApB,CAAjB;AACD;AAnBO;AAHW,CAAD,CAAxB;AA0BA,MAAM;AACJH,EAAAA,OADI;AAEJC,EAAAA,OAFI;AAGJG,EAAAA,uBAHI;AAIJF,EAAAA,uBAJI;AAKJK,EAAAA,aALI;AAMJD,EAAAA;AANI,IAOFR,IAAI,CAACU,OAPT;AASA,SACER,OADF,EAEEC,OAFF,EAGEG,uBAHF,EAIEF,uBAJF,EAKEK,aALF,EAMED,OANF;AASA,eAAeR,IAAI,CAACW,OAApB","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport { AuthReducer } from './types';\n\nconst findPart = (partName: string, state: AuthReducer) => state.dictionary.findIndex((item) => item.part === partName);\nconst foundWord = (word: string, state: AuthReducer, partIdx: number) => state.dictionary[partIdx].words.findIndex((item) => item.word === word);\n\nconst initialState: AuthReducer = {\n  authentication: true,\n  role: \"admin\",\n  name: \"oleg\",\n  surname: \"salabay\",\n  email: \"olegsalabaymac@gmail.com\",\n  photo: \"\",\n  describe: \"\",\n  password: \"1234\",\n  dictionary: [],\n  homework: [],\n};\n\nconst auth = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n      log_out: (state) => {\n        state.authentication = false\n      },\n      sign_in: (state) => {\n        state.authentication = true\n      },\n      add_part_own_dictionary: (state, {payload}) => {\n        state.dictionary = [...state.dictionary, payload];\n      },\n      add_word_own_dictionary: (state, {payload}) => {\n        const length = state.dictionary.length;\n        state.dictionary.words = [...state.dictionary.words, ...payload.word];\n      },\n      setRole: (state, {payload}) => {\n        state.role = payload;\n      },\n      add_home_work: (state, {payload}) => {\n        state.homework = [...state.homework, payload];\n      },\n    },\n});\n\nconst { \n  log_out, \n  sign_in, \n  add_word_own_dictionary, \n  add_part_own_dictionary, \n  add_home_work,\n  setRole,\n} = auth.actions;\n\nexport { \n  log_out, \n  sign_in, \n  add_word_own_dictionary, \n  add_part_own_dictionary, \n  add_home_work,\n  setRole,\n};\n\nexport default auth.reducer;"]},"metadata":{},"sourceType":"module"}