{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Create-test/Cteate-test.tsx\",\n    _s = $RefreshSig$();\n\nimport { Field, Formik, Form } from 'formik';\nimport React, { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, FormGroup, Label, Table } from 'reactstrap';\nimport { INP_BG } from '../../../../classes';\nimport Row from '../../../../component/Row/Row';\nimport { allWords } from '../../../../mockData/words';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport { add_home_work } from '../../../../store/slices/authReducer';\nimport { create_test } from '../../../../store/slices/testsReducer';\nimport \"./Create-test.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst splitWordsOnAnd = words => {\n  return words.map(word => {\n    const indexSignAnd = word.indexOf(\"&\");\n    return {\n      en: word.slice(0, indexSignAnd),\n      ua: word.slice(indexSignAnd + 1)\n    }; // split words on \"&\" en-word&ua-word\n  });\n};\n\nconst CreateTest = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const initialValues = {\n    name: \"\",\n    amount: 10,\n    type: \"en-ua\",\n    timer: 60,\n    words: []\n  };\n  const list = useMemo(() => {\n    return allWords.map(word => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: word.en\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: word.ua\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            type: \"checkbox\",\n            value: `${word.en}&${word.ua}`,\n            name: \"words\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, generateString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    });\n  }, []);\n\n  const onSubmit = (values, setFieldValue) => {\n    const words = values.words.map(word => {\n      const idx = word.indexOf(\"&\");\n      return {\n        en: word.slice(0, idx),\n        ua: word.slice(idx + 1)\n      }; // split words on \"&\" en-word&ua-word\n    });\n    dispatch(create_test({\n      name: values.name,\n      words: words,\n      version: \"en-ua\",\n      options: values.options\n    }));\n    setFieldValue(\"name\", \"\");\n    setFieldValue(\"timer\", 60);\n    setFieldValue(\"amount\", 10);\n    setFieldValue(\"type\", \"en-ua\");\n    setFieldValue(\"words\", []);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-test\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: (values, {\n          setFieldValue\n        }) => onSubmit(values, setFieldValue),\n        children: ({\n          values,\n          handleSubmit\n        }) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"crete-test__inner\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                leftWidth: 9,\n                Left: /*#__PURE__*/_jsxDEV(Table, {\n                  className: \"bg-light\",\n                  children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: list\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this),\n                fixed: \"right\",\n                rightWidth: 3,\n                Right: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"Name\",\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: INP_BG,\n                      type: \"text\",\n                      placeholder: \"name\",\n                      name: \"name\",\n                      id: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"Type\",\n                      children: \"Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: INP_BG,\n                      as: \"select\",\n                      name: \"type\",\n                      id: \"Type\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"EN - UA\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 96,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"UA - EN\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 97,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"Amount\",\n                      children: \"Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: INP_BG,\n                      as: \"select\",\n                      name: \"amount\",\n                      id: \"Amount\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"10\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"15\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"20\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"25\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 106,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"30\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"Timer\",\n                      children: \"Timer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: INP_BG,\n                      as: \"select\",\n                      name: \"timer\",\n                      id: \"Timer\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"30\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"60\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"90\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"120\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"150\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"form-control btn-bg\",\n                      color: \"success\",\n                      type: \"button\",\n                      onClick: () => {\n                        if (values.words.length !== values.amount) {\n                          return alert(`You need to select a ${values.amount}`);\n                        } else {\n                          alert(\"success\");\n                          handleSubmit();\n                        }\n                      },\n                      children: \"CREATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"form-control btn-bg\",\n                      color: \"success\",\n                      type: \"button\",\n                      onClick: () => {\n                        dispatch(add_home_work({\n                          name: values.name,\n                          words: splitWordsOnAnd(values.words)\n                        }));\n                      },\n                      children: \"CREATE HOMEWORK\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"title\",\n                    children: [\"Words selected: \", values.words.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateTest, \"d3sm5jP6EWZQaZUIiPSAhe0SajQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateTest;\nexport default CreateTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTest\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Create-test/Cteate-test.tsx"],"names":["Field","Formik","Form","React","useMemo","useDispatch","Button","FormGroup","Label","Table","INP_BG","Row","allWords","generateString","add_home_work","create_test","splitWordsOnAnd","words","map","word","indexSignAnd","indexOf","en","slice","ua","CreateTest","dispatch","initialValues","name","amount","type","timer","list","onSubmit","values","setFieldValue","idx","version","options","handleSubmit","length","alert"],"mappings":"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","sourcesContent":["import { Field, Formik, Form } from 'formik';\nimport React, { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, FormGroup, Label, Table } from 'reactstrap';\nimport { INP_BG } from '../../../../classes';\nimport Row from '../../../../component/Row/Row';\nimport { allWords } from '../../../../mockData/words';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport { add_home_work } from '../../../../store/slices/authReducer';\nimport { create_test } from '../../../../store/slices/testsReducer';\nimport \"./Create-test.scss\";\nimport { InitialValues } from './types';\n\nconst splitWordsOnAnd = (words: string[]) => {\n  return words.map((word: string) => {\n    const indexSignAnd = word.indexOf(\"&\");\n    return {en: word.slice(0, indexSignAnd), ua: word.slice(indexSignAnd + 1)};// split words on \"&\" en-word&ua-word\n  });\n}\n\nconst CreateTest: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const initialValues: InitialValues = {\n    name: \"\",\n    amount: 10,\n    type: \"en-ua\",\n    timer: 60,\n    words: [],\n  }\n\n  const list = useMemo(() => {\n    return allWords.map((word: {en: string, ua: string}) => {\n      return (\n        <tr key={generateString()}>\n          <td>{word.en}</td>\n          <td>{word.ua}</td>\n          <th>\n            <Field type=\"checkbox\" value={`${word.en}&${word.ua}`} name=\"words\" />\n          </th>\n        </tr>\n      )\n    })\n  }, []);\n\n  const onSubmit = (values: any, setFieldValue: any) => {\n      const words = values.words.map((word: string) => {\n        const idx = word.indexOf(\"&\");\n        return {en: word.slice(0, idx), ua: word.slice(idx + 1)};// split words on \"&\" en-word&ua-word\n      });\n  \n      dispatch(create_test({\n        name: values.name,\n        words: words,\n        version: \"en-ua\",\n        options: values.options\n      }));\n      \n      setFieldValue(\"name\", \"\");\n      setFieldValue(\"timer\", 60);\n      setFieldValue(\"amount\", 10);\n      setFieldValue(\"type\", \"en-ua\");\n      setFieldValue(\"words\", []);\n  };\n\n  return (\n    <>\n    <div className=\"create-test\">\n      <Formik initialValues={initialValues} onSubmit={(values, {setFieldValue}) => onSubmit(values, setFieldValue)}>\n        {({values, handleSubmit}) => {\n          return (\n            <>\n              <Form className=\"crete-test__inner\">\n                <Row \n                  leftWidth={9}\n                  Left={(\n                      <Table className=\"bg-light\">\n                        <tbody>\n                          {\n                            list\n                          }\n                        </tbody>\n                      </Table>\n                  )} \n                  fixed={\"right\"}\n                  rightWidth={3}\n                  Right={(\n                    <>\n                      <FormGroup>\n                        <Label for=\"Name\">Name</Label>\n                        <Field className={INP_BG} type=\"text\" placeholder=\"name\" name=\"name\" id=\"Name\" />\n                      </FormGroup>\n                      <FormGroup>\n                        <Label for=\"Type\">Type</Label>\n                        <Field className={INP_BG} as=\"select\" name=\"type\" id=\"Type\">\n                          <option>EN - UA</option>\n                          <option>UA - EN</option>\n                        </Field>\n                      </FormGroup>\n                      <FormGroup>\n                        <Label for=\"Amount\">Amount</Label>\n                        <Field className={INP_BG} as=\"select\" name=\"amount\" id=\"Amount\">\n                          <option>10</option>\n                          <option>15</option>\n                          <option>20</option>\n                          <option>25</option>\n                          <option>30</option>\n                        </Field>\n                      </FormGroup>\n                      <FormGroup>\n                        <Label for=\"Timer\">Timer</Label>\n                        <Field className={INP_BG} as=\"select\" name=\"timer\" id=\"Timer\">\n                          <option>30</option>\n                          <option>60</option>\n                          <option>90</option>\n                          <option>120</option>\n                          <option>150</option>\n                        </Field>\n                      </FormGroup>\n                      <FormGroup>\n                        <Button \n                          className=\"form-control btn-bg\" \n                          color=\"success\" \n                          type=\"button\" \n                          onClick={() => {\n                            if(values.words.length !== values.amount) {\n                              return alert(`You need to select a ${values.amount}`)\n                            } else {\n                              alert(\"success\");\n                              handleSubmit();\n                            }\n                        }}\n                        >\n                          CREATE\n                        </Button>\n                      </FormGroup>\n                      <FormGroup>\n                        <Button \n                          className=\"form-control btn-bg\" \n                          color=\"success\" \n                          type=\"button\" \n                          onClick={() => {\n                            dispatch(add_home_work({name: values.name, words: splitWordsOnAnd(values.words as any)}));\n                        }}\n                        >\n                          CREATE HOMEWORK\n                        </Button>\n                      </FormGroup>\n                      <h6 className=\"title\">Words selected: {values.words.length}</h6>\n                    </>\n                  )}/>\n                </Form>\n              </>\n            )\n          }}\n        </Formik>\n      </div>\n    </>\n  );\n};\n\nexport default CreateTest;"]},"metadata":{},"sourceType":"module"}