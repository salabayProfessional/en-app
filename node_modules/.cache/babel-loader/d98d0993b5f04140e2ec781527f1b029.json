{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Results/Results.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { ModalResult } from '../../../../component/Modal/Modals';\nimport RestrictedList from '../../../../component/RestrictedList/RestrictedList';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport Statistics from './Statistics';\nimport \"./Results.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Results = () => {\n  _s();\n\n  const results = useSelector(state => state.result.results);\n  const [idResult, setIDResult] = useState(null);\n  const [isModal, setIsModal] = useState(false);\n  const [amount, setAmount] = useState(16);\n\n  const toggleIsModal = () => setIsModal(!isModal);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-page\",\n    children: [/*#__PURE__*/_jsxDEV(ModalResult, {\n      isModal: isModal,\n      toggle: toggleIsModal,\n      result: idResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      resultItems: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RestrictedList, {\n      list: results,\n      amount: amount,\n      listClasses: \"test-list\",\n      children: item => {\n        var _ref;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test__item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"title\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"under-title\",\n            children: [(_ref = `${item === null || item === void 0 ? void 0 : item.startTime}`) === null || _ref === void 0 ? void 0 : _ref.slice(11, 19), \" - \", `${item === null || item === void 0 ? void 0 : item.endTime}`.slice(11, 19)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-success btn-center btn-bg border-none\",\n            type: \"button\",\n            onClick: () => {\n              setIDResult(item);\n              toggleIsModal();\n            },\n            children: \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, generateString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), results.length > 12 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success btn-bg\",\n      onClick: () => {\n        if (amount < results.length) {\n          setAmount(amount + 12);\n        }\n\n        ;\n      },\n      children: \"Yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), results.length < 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"under-title\",\n      children: \"\\\"you don't pass a test yet. And then here is nothing\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Results, \"LpVysoxecHn5phSPf/356sWuckw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Results/Results.tsx"],"names":["React","useState","useSelector","Button","ModalResult","RestrictedList","generateString","Statistics","Results","results","state","result","idResult","setIDResult","isModal","setIsModal","amount","setAmount","toggleIsModal","item","name","startTime","slice","endTime","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { ModalResult } from '../../../../component/Modal/Modals';\nimport RestrictedList from '../../../../component/RestrictedList/RestrictedList';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport { RootReducer } from '../../../../store/slices/types';\nimport Statistics from './Statistics';\nimport \"./Results.scss\";\n\nconst Results: React.FC = () => {\n  const results = useSelector((state: RootReducer) => state.result.results);\n  const [idResult, setIDResult]: any = useState(null);\n  const [isModal, setIsModal] = useState(false);\n  const [amount, setAmount] = useState(16);\n  const toggleIsModal = () => setIsModal(!isModal);\n\n  return (\n    <div className=\"results-page\">\n\n      <ModalResult \n        isModal={isModal} \n        toggle={toggleIsModal} \n        result={idResult}\n      />\n      <Statistics resultItems={results}/>\n      <RestrictedList \n        list={results}\n        amount={amount}\n        listClasses=\"test-list\"\n      >\n        {(item) => {\n          return (\n            <div className=\"test__item\" key={generateString()}>\n              <h3 className=\"title\">{item.name}</h3>\n              <p className=\"under-title\">{`${item?.startTime}`?.slice(11, 19)} - {`${item?.endTime}`.slice(11, 19)}</p>\n              <Button \n                className=\"btn btn-success btn-center btn-bg border-none\" \n                type=\"button\" \n                onClick={() => {\n                  setIDResult(item);\n                  toggleIsModal();\n                }}>\n                Show\n              </Button>\n            </div>\n          )\n        }}\n      </RestrictedList>\n      {\n        results.length > 12 && (\n          <button className=\"btn btn-success btn-bg\" onClick={() => {\n            if(amount < results.length) {\n              setAmount(amount + 12);\n            };\n          }}>Yet</button>\n        )\n      }\n\n      {\n        results.length < 1 && <p className=\"under-title\">\"you don't pass a test yet. And then here is nothing\"</p>\n      }\n    </div>\n  )\n};\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}