{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  start: false,\n  test: null,\n  allTests: [],\n  allHomework: []\n};\nconst tests = createSlice({\n  name: \"tests\",\n  initialState,\n  reducers: {\n    set_start_test: (state, action) => {\n      state.start = action.payload;\n    },\n    set_test: (state, action) => {\n      state.test = action.payload;\n    },\n    reset_test: state => {\n      state.test = null;\n    },\n    se,\n    create_test: (state, {\n      payload\n    }) => {\n      state.allTests = [...state.allTests, payload];\n    },\n    delete_tests: state => {\n      state.allTests = [];\n    },\n    delete_test: (state, {\n      payload\n    }) => {\n      const name = payload.name;\n      const index = state.allTests.findIndex(test => test.name === name);\n      const before = state.allTests.slice(0, index);\n      const after = state.allTests.slice(index);\n      state.allTests = [...before, ...after];\n    }\n  },\n  extraReducers: state => state\n});\nexport const {\n  set_start_test,\n  set_test,\n  set_info_id,\n  create_test,\n  reset_test,\n  delete_test,\n  delete_tests\n} = tests.actions;\nexport default tests.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/store/slices/testsReducer.ts"],"names":["createSlice","initialState","start","test","allTests","allHomework","tests","name","reducers","set_start_test","state","action","payload","set_test","reset_test","se","create_test","delete_tests","delete_test","index","findIndex","before","slice","after","extraReducers","set_info_id","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAGA,MAAMC,YAA0B,GAAG;AACjCC,EAAAA,KAAK,EAAE,KAD0B;AAEjCC,EAAAA,IAAI,EAAE,IAF2B;AAGjCC,EAAAA,QAAQ,EAAE,EAHuB;AAIjCC,EAAAA,WAAW,EAAE;AAJoB,CAAnC;AAOA,MAAMC,KAAK,GAAGN,WAAW,CAAC;AACxBO,EAAAA,IAAI,EAAE,OADkB;AAExBN,EAAAA,YAFwB;AAGxBO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACC,OAArB;AACD,KAHO;AAIRC,IAAAA,QAAQ,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACC,OAApB;AACD,KANO;AAORE,IAAAA,UAAU,EAAGJ,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACP,IAAN,GAAa,IAAb;AACD,KATO;AAURY,IAAAA,EAVQ;AAWRC,IAAAA,WAAW,EAAE,CAACN,KAAD,EAAQ;AAACE,MAAAA;AAAD,KAAR,KAAsB;AACjCF,MAAAA,KAAK,CAACN,QAAN,GAAiB,CAAC,GAAGM,KAAK,CAACN,QAAV,EAAoBQ,OAApB,CAAjB;AACD,KAbO;AAcRK,IAAAA,YAAY,EAAGP,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACN,QAAN,GAAiB,EAAjB;AACD,KAhBO;AAiBRc,IAAAA,WAAW,EAAE,CAACR,KAAD,EAAQ;AAACE,MAAAA;AAAD,KAAR,KAAsB;AACjC,YAAML,IAAI,GAAGK,OAAO,CAACL,IAArB;AACA,YAAMY,KAAK,GAAGT,KAAK,CAACN,QAAN,CAAegB,SAAf,CAA0BjB,IAAD,IAAeA,IAAI,CAACI,IAAL,KAAcA,IAAtD,CAAd;AACA,YAAMc,MAAM,GAAGX,KAAK,CAACN,QAAN,CAAekB,KAAf,CAAqB,CAArB,EAAwBH,KAAxB,CAAf;AACA,YAAMI,KAAK,GAAGb,KAAK,CAACN,QAAN,CAAekB,KAAf,CAAqBH,KAArB,CAAd;AACAT,MAAAA,KAAK,CAACN,QAAN,GAAiB,CAAC,GAAGiB,MAAJ,EAAY,GAAGE,KAAf,CAAjB;AACD;AAvBO,GAHc;AA4BxBC,EAAAA,aAAa,EAAGd,KAAD,IAAgBA;AA5BP,CAAD,CAAzB;AA8BA,OAAO,MAAM;AACXD,EAAAA,cADW;AAEXI,EAAAA,QAFW;AAGXY,EAAAA,WAHW;AAIXT,EAAAA,WAJW;AAKXF,EAAAA,UALW;AAMXI,EAAAA,WANW;AAOXD,EAAAA;AAPW,IAQTX,KAAK,CAACoB,OARH;AAUP,eAAepB,KAAK,CAACqB,OAArB","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport { TestsReducer } from './types';\n\nconst initialState: TestsReducer = {\n  start: false,\n  test: null,\n  allTests: [], \n  allHomework: [],\n};\n\nconst tests = createSlice({\n  name: \"tests\",\n  initialState,\n  reducers: {\n    set_start_test: (state, action) => {\n      state.start = action.payload;\n    },\n    set_test: (state, action) => {\n      state.test = action.payload;\n    },\n    reset_test: (state) => {\n      state.test = null;\n    },\n    se,\n    create_test: (state, {payload}) => {\n      state.allTests = [...state.allTests, payload];\n    },\n    delete_tests: (state) => {\n      state.allTests = [];\n    },\n    delete_test: (state, {payload}) => {\n      const name = payload.name;\n      const index = state.allTests.findIndex((test: any) => test.name === name);\n      const before = state.allTests.slice(0, index);\n      const after = state.allTests.slice(index, );\n      state.allTests = [...before, ...after];\n    },\n  },\n  extraReducers: (state: any) => state\n});\nexport const { \n  set_start_test, \n  set_test, \n  set_info_id, \n  create_test, \n  reset_test, \n  delete_test, \n  delete_tests \n} = tests.actions;\n\nexport default tests.reducer;"]},"metadata":{},"sourceType":"module"}