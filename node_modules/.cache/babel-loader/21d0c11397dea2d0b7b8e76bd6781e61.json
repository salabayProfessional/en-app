{"ast":null,"code":"import _objectSpread from\"/Users/macbookpro/Documents/GitHub/en-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{FormGroup,Label,FormFeedback,FormText}from'reactstrap';import{BTN_BG}from'../../../../classes';import*as Yup from'yup';import{useForm}from'react-hook-form';import{yupResolver}from'@hookform/resolvers/yup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SignInForm=function SignInForm(){var onSubmit=function onSubmit(values){alert(JSON.stringify(values));};var schema=Yup.object().shape({name:Yup.string().min(2,'Too Short!').max(50,'Too Long!').required('Required'),password:Yup.string().required('Required'),repeatPassword:Yup.string().required('Required'),email:Yup.string().email('Invalid email').required('Required')});var _useForm=useForm({resolver:yupResolver(schema)}),register=_useForm.register,handleSubmit=_useForm.handleSubmit;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"name\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({className:\"form-control btn-bg\"},register(\"name\"))),/*#__PURE__*/_jsx(FormFeedback,{children:\"Error email\"}),/*#__PURE__*/_jsx(FormText,{children:\"Example help text that remains unchanged.\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"email\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({className:\"form-control btn-bg\"},register(\"email\"))),/*#__PURE__*/_jsx(FormFeedback,{children:\"Error password\"}),/*#__PURE__*/_jsx(FormText,{children:\"Example help text that remains unchanged.\"})]})]}),/*#__PURE__*/_jsx(FormGroup,{className:\"position-relative\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:BTN_BG,children:\"SUBMIT\"})})]});};export default SignInForm;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Sign-in/component/Sign-in-form/Sign-in-form.tsx"],"names":["React","FormGroup","Label","FormFeedback","FormText","BTN_BG","Yup","useForm","yupResolver","SignInForm","onSubmit","values","alert","JSON","stringify","schema","object","shape","name","string","min","max","required","password","repeatPassword","email","resolver","register","handleSubmit"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,KAApB,CAA2BC,YAA3B,CAAyCC,QAAzC,KAAyD,YAAzD,CACA,OAASC,MAAT,KAAuB,qBAAvB,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,WAAT,KAA4B,yBAA5B,C,wFAEA,GAAMC,CAAAA,UAAoB,CAAG,QAAvBA,CAAAA,UAAuB,EAAM,CAUjC,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAAe,CAC9BC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAD,CAAL,CACD,CAFD,CAIA,GAAMI,CAAAA,MAAM,CAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB,CAChCC,IAAI,CAAEZ,GAAG,CAACa,MAAJ,GACLC,GADK,CACD,CADC,CACE,YADF,EAELC,GAFK,CAED,EAFC,CAEG,WAFH,EAGLC,QAHK,CAGI,UAHJ,CAD0B,CAKhCC,QAAQ,CAAEjB,GAAG,CAACa,MAAJ,GAAaG,QAAb,CAAsB,UAAtB,CALsB,CAMhCE,cAAc,CAAElB,GAAG,CAACa,MAAJ,GAAaG,QAAb,CAAsB,UAAtB,CANgB,CAOhCG,KAAK,CAAEnB,GAAG,CAACa,MAAJ,GAAaM,KAAb,CAAmB,eAAnB,EAAoCH,QAApC,CAA6C,UAA7C,CAPyB,CAAnB,CAAf,CAUA,aAAmCf,OAAO,CAAC,CAACmB,QAAQ,CAAElB,WAAW,CAAEO,MAAF,CAAtB,CAAD,CAA1C,CAAQY,QAAR,UAAQA,QAAR,CAAkBC,YAAlB,UAAkBA,YAAlB,CAEA,mBACE,cAAM,QAAQ,CAAEA,YAAY,CAAClB,QAAD,CAA5B,wBACE,oCACE,MAAC,SAAD,yBACE,KAAC,KAAD,EAAO,GAAG,CAAC,MAAX,mBADF,cAEE,4BAAO,SAAS,CAAC,qBAAjB,EAA2CiB,QAAQ,CAAC,MAAD,CAAnD,EAFF,cAGE,KAAC,YAAD,0BAHF,cAIE,KAAC,QAAD,wDAJF,GADF,cAOE,MAAC,SAAD,yBACE,KAAC,KAAD,EAAO,GAAG,CAAC,OAAX,sBADF,cAEE,4BAAO,SAAS,CAAC,qBAAjB,EAA2CA,QAAQ,CAAC,OAAD,CAAnD,EAFF,cAGE,KAAC,YAAD,6BAHF,cAIE,KAAC,QAAD,wDAJF,GAPF,GADF,cAgBE,KAAC,SAAD,EAAW,SAAS,CAAC,mBAArB,uBACE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAEtB,MAAjC,oBADF,EAhBF,GADF,CAsBD,CAhDD,CAkDA,cAAeI,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport { FormGroup, Label, FormFeedback, FormText } from 'reactstrap';\nimport { BTN_BG } from '../../../../classes';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nconst SignInForm: React.FC = () => {\n\n  interface I {\n    name: string,\n    password: string,\n    repeatPassword: string,\n    email: string,\n    submit: boolean,\n  }\n\n  const onSubmit = (values: I) => {\n    alert(JSON.stringify(values));\n  };\n\n  const schema = Yup.object().shape({\n    name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n    password: Yup.string().required('Required'),\n    repeatPassword: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email').required('Required'),\n  });\n\n  const { register, handleSubmit } = useForm({resolver: yupResolver (schema)});\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div >\n        <FormGroup>\n          <Label for=\"name\">Email</Label>\n          <input className=\"form-control btn-bg\" {...register(\"name\")}/>\n          <FormFeedback>Error email</FormFeedback>\n          <FormText>Example help text that remains unchanged.</FormText>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">Password</Label>\n          <input className=\"form-control btn-bg\" {...register(\"email\")}></input>  \n          <FormFeedback>Error password</FormFeedback>\n          <FormText>Example help text that remains unchanged.</FormText>\n        </FormGroup>\n      </div>\n      \n      <FormGroup className=\"position-relative\">\n        <button type=\"submit\" className={BTN_BG}>SUBMIT</button>\n      </FormGroup>\n    </form>\n  )\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}