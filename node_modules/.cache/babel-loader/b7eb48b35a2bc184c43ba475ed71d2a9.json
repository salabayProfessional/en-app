{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Dictionary/components/DictionaryOptions/DictionaryOptions.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ModalCreatedTest } from '../../../../../../component/Modal/Modals';\nimport { Table } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DictionaryOptions = ({\n  isList,\n  activeDictionary,\n  toggleList,\n  randomDictionaryWords,\n  toggleActiveItem,\n  reset,\n  toggleHideColumnUa,\n  toggleHideColumnEn\n}) => {\n  _s();\n\n  const [isModal, setIsModal] = useState(false);\n\n  const toggleIsModal = () => setIsModal(!isModal); // const list = activeDictionary?.map((item: any) => {\n  //   return (\n  //     <>\n  //       <tbody onClick={() => toggleActiveItem(item)} key={generateString()}>\n  //         <tr>\n  //           <th scope=\"row\">\n  //             {item.name}\n  //           </th>\n  //         </tr>\n  //       </tbody>\n  //      {\n  //        activeDictionary.name === item.name && (\n  //         <div className=\"active-option\">\n  //           <button className=\"btn btn-outline-success top-10\" onClick={() => randomDictionaryWords(activeDictionary)}>RANDOM</button>\n  //           <button className=\"btn btn-outline-success top-10\" onClick={() => reset()}>CLEAR ANSWER</button>\n  //           <button className=\"btn btn-outline-success top-10\" onClick={() => toggleHideColumnUa()}>HIDE UA COLUMN</button>\n  //           <button className=\"btn btn-outline-success top-10\" onClick={() => toggleHideColumnEn()}>HIDE EN COLUMN</button>\n  //         </div>\n  //        )\n  //      }\n  //     </>\n  //   )\n  // });\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dictionary-options\",\n    children: [/*#__PURE__*/_jsxDEV(ModalCreatedTest, {\n      toggle: toggleIsModal,\n      isModal: isModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dictionary-options__party\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"filter\",\n        className: \"form-control btn-bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dictionary-options__party\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success btn-100\",\n        onClick: toggleIsModal,\n        children: \"Add new dictionary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dictionary-options__party\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success btn-100\",\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dictionary-options__party\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success btn-100\",\n        onClick: () => toggleList(),\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), isList && /*#__PURE__*/_jsxDEV(Table, {\n        hover: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DictionaryOptions, \"cOXKGbUwrDMC92fa+dqhHc2O4Qw=\");\n\n_c = DictionaryOptions;\nexport default DictionaryOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"DictionaryOptions\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Dictionary/components/DictionaryOptions/DictionaryOptions.tsx"],"names":["React","useState","ModalCreatedTest","Table","DictionaryOptions","isList","activeDictionary","toggleList","randomDictionaryWords","toggleActiveItem","reset","toggleHideColumnUa","toggleHideColumnEn","isModal","setIsModal","toggleIsModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,0CAAjC;AACA,SAASC,KAAT,QAAsB,YAAtB;;;AAGA,MAAMC,iBAAgC,GAAG,CAAC;AACxCC,EAAAA,MADwC;AAExCC,EAAAA,gBAFwC;AAGxCC,EAAAA,UAHwC;AAIxCC,EAAAA,qBAJwC;AAKxCC,EAAAA,gBALwC;AAMxCC,EAAAA,KANwC;AAOxCC,EAAAA,kBAPwC;AAQxCC,EAAAA;AARwC,CAAD,KASnC;AAAA;;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMc,aAAa,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAAtC,CAFI,CAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,MAAM,EAAEE,aAA1B;AAAyC,MAAA,OAAO,EAAEF;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,iCAAlB;AAAoD,QAAA,OAAO,EAAEE,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,iCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAWE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,iCAAlB;AAAoD,QAAA,OAAO,EAAE,MAAMR,UAAU,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGIF,MAAM,iBACJ,QAAC,KAAD;AAAO,QAAA,KAAK;AAAZ;AAAA;AAAA;AAAA;AAAA,cAJN;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA/DD;;GAAMD,iB;;KAAAA,iB;AAiEN,eAAeA,iBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ModalCreatedTest } from '../../../../../../component/Modal/Modals'\nimport { Table } from 'reactstrap';\nimport { generateString } from '../../../../../../specialFunction/specialFunction';\n\nconst DictionaryOptions: React.FC<any> = ({\n  isList, \n  activeDictionary, \n  toggleList, \n  randomDictionaryWords,\n  toggleActiveItem,\n  reset,\n  toggleHideColumnUa,\n  toggleHideColumnEn\n}) => {\n  const [isModal, setIsModal] = useState(false);\n  const toggleIsModal = () => setIsModal(!isModal);\n\n  // const list = activeDictionary?.map((item: any) => {\n  //   return (\n  //     <>\n  //       <tbody onClick={() => toggleActiveItem(item)} key={generateString()}>\n  //         <tr>\n  //           <th scope=\"row\">\n  //             {item.name}\n  //           </th>\n  //         </tr>\n  //       </tbody>\n  //      {\n  //        activeDictionary.name === item.name && (\n  //         <div className=\"active-option\">\n  //           <button className=\"btn btn-outline-success top-10\" onClick={() => randomDictionaryWords(activeDictionary)}>RANDOM</button>\n  //           <button className=\"btn btn-outline-success top-10\" onClick={() => reset()}>CLEAR ANSWER</button>\n  //           <button className=\"btn btn-outline-success top-10\" onClick={() => toggleHideColumnUa()}>HIDE UA COLUMN</button>\n  //           <button className=\"btn btn-outline-success top-10\" onClick={() => toggleHideColumnEn()}>HIDE EN COLUMN</button>\n  //         </div>\n  //        )\n  //      }\n  //     </>\n  //   )\n  // });\n\n  return (\n    <div className=\"dictionary-options\">\n      <ModalCreatedTest toggle={toggleIsModal} isModal={isModal} />\n      <div className=\"dictionary-options__party\">\n        <input type=\"text\" placeholder=\"filter\" className=\"form-control btn-bg\" />\n      </div>\n      <div className=\"dictionary-options__party\">\n        <button className=\"btn btn-outline-success btn-100\" onClick={toggleIsModal}>Add new dictionary</button>\n      </div>\n      <div className=\"dictionary-options__party\">\n        <button className=\"btn btn-outline-success btn-100\">DELETE</button>\n      </div>\n      <div className=\"dictionary-options__party\">\n        <button className=\"btn btn-outline-success btn-100\" onClick={() => toggleList()}>List</button>\n        {\n          isList && (\n            <Table hover>\n              {/* {\n                list\n              } */}\n            </Table>\n          )\n        }\n      </div>\n    </div>\n  )\n};\n\nexport default DictionaryOptions;\n"]},"metadata":{},"sourceType":"module"}