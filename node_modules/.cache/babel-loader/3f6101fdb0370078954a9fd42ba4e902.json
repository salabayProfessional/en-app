{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './slices/rootSlice';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { createWhitelistFilter } from 'redux-persist-transform-filter';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  transforms: [createWhitelistFilter(\"tests\", [\"allTests\"]), createWhitelistFilter(\"result\", [\"results\"]), createWhitelistFilter(\"auth\", [\"dictionary\", \"homework\"])],\n  whitelist: [\"tests\", \"result\", \"auth\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nexport const localStore = persistStore(store);\nexport default store;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/store/store.ts"],"names":["configureStore","rootReducer","persistStore","persistReducer","storage","createWhitelistFilter","persistConfig","key","transforms","whitelist","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","localStore"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBH,EAAAA,OAFoB;AAGpBI,EAAAA,UAAU,EAAE,CACVH,qBAAqB,CAAC,OAAD,EAAU,CAAC,UAAD,CAAV,CADX,EAEVA,qBAAqB,CAAC,QAAD,EAAW,CAAC,SAAD,CAAX,CAFX,EAGVA,qBAAqB,CAAC,MAAD,EAAS,CAAC,YAAD,EAAe,UAAf,CAAT,CAHX,CAHQ;AAQpBI,EAAAA,SAAS,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB;AARS,CAAtB;AAWA,MAAMC,gBAAgB,GAAGP,cAAc,CAACG,aAAD,EAAgBL,WAAhB,CAAvC;AAEA,OAAO,MAAMU,KAAK,GAAGX,cAAc,CAAC;AAChCY,EAAAA,OAAO,EAAEF,gBADuB;AAEhCG,EAAAA,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AADA,GAAD;AAHY,CAAD,CAA5B;AAQP,OAAO,MAAMC,UAAU,GAAGd,YAAY,CAACS,KAAD,CAA/B;AACP,eAAeA,KAAf","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './slices/rootSlice';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { createWhitelistFilter } from 'redux-persist-transform-filter';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  transforms: [\n    createWhitelistFilter(\"tests\", [\"allTests\"]),\n    createWhitelistFilter(\"result\", [\"results\"]),\n    createWhitelistFilter(\"auth\", [\"dictionary\", \"homework\"]),\n  ],\n  whitelist: [\"tests\", \"result\", \"auth\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n \nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n \nexport const localStore = persistStore(store);\nexport default store;"]},"metadata":{},"sourceType":"module"}