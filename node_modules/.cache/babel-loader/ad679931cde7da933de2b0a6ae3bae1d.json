{"ast":null,"code":"import _slicedToArray from\"/Users/macbookpro/Documents/GitHub/en-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useForm}from'react-hook-form';import{shuffle}from'../../../../specialFunction/specialFunction';import DictionaryOptions from'./components/DictionaryOptions/DictionaryOptions';import TableWords from'./components/DictionaryPart/DictionaryPart';import\"./Dictionary.scss\";import Row from\"../../../../component/Row/Row\";import{useAppSelector}from\"../../../../hooks/useRedux\";import{jsx as _jsx}from\"react/jsx-runtime\";var Dictionary=function Dictionary(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isList=_useState2[0],setIsList=_useState2[1];var toggleList=function toggleList(){return setIsList(!isList);};var dictionaries=useAppSelector(function(state){return state.dictionary.dictionaryTests;});var _useState3=useState(dictionaries[0]),_useState4=_slicedToArray(_useState3,2),activeDictionary=_useState4[0],setActiveDictionary=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isHideColumnUa=_useState6[0],setIsHideColumnUa=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isHideColumnEn=_useState8[0],setIsHideColumnEn=_useState8[1];var toggleHideColumnUa=function toggleHideColumnUa(){return setIsHideColumnUa(!isHideColumnUa);};var toggleHideColumnEn=function toggleHideColumnEn(){return setIsHideColumnEn(!isHideColumnEn);};var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,reset=_useForm.reset;var toggleActiveItem=function toggleActiveItem(dictionary){if(dictionary.name===activeDictionary){return;}else{setActiveDictionary(dictionary);}};var randomDictionaryWords=function randomDictionaryWords(activeDictionary){setActiveDictionary({name:activeDictionary.name,words:shuffle(activeDictionary.words)});};var onSubmit=function onSubmit(data){console.log(data);};return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit(onSubmit),children:/*#__PURE__*/_jsx(\"div\",{className:\"dictionary\",children:/*#__PURE__*/_jsx(Row,{Left:/*#__PURE__*/_jsx(\"div\",{className:\"table-words\",children:/*#__PURE__*/_jsx(TableWords,{activeDictionary:activeDictionary,register:register,isHideColumnUa:isHideColumnUa,isHideColumnEn:isHideColumnEn})}),Right:/*#__PURE__*/_jsx(DictionaryOptions,{isList:isList,activeDictionary:activeDictionary,randomDictionaryWords:randomDictionaryWords,toggleActiveItem:toggleActiveItem,toggleList:toggleList,reset:reset,toggleHideColumnUa:toggleHideColumnUa,toggleHideColumnEn:toggleHideColumnEn}),rightWidth:3,leftWidth:9})})});};export default Dictionary;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Dictionary/Dictionary.tsx"],"names":["React","useState","useForm","shuffle","DictionaryOptions","TableWords","Row","useAppSelector","Dictionary","isList","setIsList","toggleList","dictionaries","state","dictionary","dictionaryTests","activeDictionary","setActiveDictionary","isHideColumnUa","setIsHideColumnUa","isHideColumnEn","setIsHideColumnEn","toggleHideColumnUa","toggleHideColumnEn","register","handleSubmit","reset","toggleActiveItem","name","randomDictionaryWords","words","onSubmit","data","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { shuffle } from '../../../../specialFunction/specialFunction';\nimport DictionaryOptions from './components/DictionaryOptions/DictionaryOptions';\nimport TableWords from './components/DictionaryPart/DictionaryPart';\nimport \"./Dictionary.scss\";\nimport Row from \"../../../../component/Row/Row\";\nimport { useAppSelector } from \"../../../../hooks/useRedux\";\n\nconst Dictionary: React.FC = () => {\n  const [isList, setIsList] = useState(false);\n  const toggleList = () => setIsList(!isList);\n  const dictionaries = useAppSelector((state) => state.dictionary.dictionaryTests);\n  const [activeDictionary, setActiveDictionary] = useState<any>(dictionaries[0]);\n  const [isHideColumnUa, setIsHideColumnUa] = useState(false);\n  const [isHideColumnEn, setIsHideColumnEn] = useState(false);\n  const toggleHideColumnUa = () => setIsHideColumnUa(!isHideColumnUa);\n  const toggleHideColumnEn = () => setIsHideColumnEn(!isHideColumnEn);\n  const { register, handleSubmit, reset } = useForm();\n\n  interface DictionaryPart {name: string, words: {en: string, ua: string}}\n\n  const toggleActiveItem = (dictionary: DictionaryPart) => {\n    if(dictionary.name === activeDictionary) {\n      return\n    } else {\n      setActiveDictionary(dictionary);\n    }\n  }\n\n  const randomDictionaryWords = (activeDictionary: any) => {\n    setActiveDictionary({\n      name: activeDictionary.name, \n      words: shuffle(activeDictionary.words)\n    });\n  };\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"dictionary\">\n        <Row \n          Left={(\n            <div className=\"table-words\">\n              <TableWords \n                activeDictionary={activeDictionary} \n                register={register}\n                isHideColumnUa={isHideColumnUa}\n                isHideColumnEn={isHideColumnEn}\n              />\n            </div>\n          )}\n          Right={(\n            <DictionaryOptions \n                isList={isList}\n                activeDictionary={activeDictionary}\n                randomDictionaryWords={randomDictionaryWords}\n                toggleActiveItem={toggleActiveItem}\n                toggleList={toggleList}\n                reset={reset}\n                toggleHideColumnUa={toggleHideColumnUa}\n                toggleHideColumnEn={toggleHideColumnEn}\n            />\n          )}\n          rightWidth={3}\n          leftWidth={9}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default Dictionary;"]},"metadata":{},"sourceType":"module"}