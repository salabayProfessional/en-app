{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar index_1 = require(\"./enhancers/index\");\n\nfunction expandAliases(props) {\n  var propNames = Object.keys(props);\n  var newProps = new Map();\n  propNames.forEach(function (propName) {\n    var propValue = props[propName];\n    var aliases = index_1.propAliases[propName] || [propName];\n\n    if (process.env.NODE_ENV !== 'production') {\n      var validator = index_1.propValidators[propName];\n\n      if (validator) {\n        var result = validator(propValue);\n\n        if (result) {\n          throw new Error(\"\\uD83D\\uDCE6 ui-box: \".concat(result));\n        }\n      }\n    }\n\n    aliases.forEach(function (alias) {\n      newProps.set(alias, propValue);\n    });\n  });\n  return newProps;\n}\n\nexports.default = expandAliases;","map":{"version":3,"sources":["../../src/expand-aliases.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AASA,SAAwB,aAAxB,CAAsC,KAAtC,EAA4E;AAC1E,MAAM,SAAS,GAAG,MAAM,CAAC,IAAP,CAAY,KAAZ,CAAlB;AAEA,MAAM,QAAQ,GAAG,IAAI,GAAJ,EAAjB;AAEA,EAAA,SAAS,CAAC,OAAV,CAAkB,UAAA,QAAQ,EAAG;AAC3B,QAAM,SAAS,GAAiB,KAAK,CAAC,QAAD,CAArC;AACA,QAAM,OAAO,GAAa,OAAA,CAAA,WAAA,CAAY,QAAZ,KAAyB,CAAC,QAAD,CAAnD;;AAGA,QAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAM,SAAS,GAAG,OAAA,CAAA,cAAA,CAAe,QAAf,CAAlB;;AACA,UAAI,SAAJ,EAAe;AACb,YAAM,MAAM,GAAG,SAAS,CAAC,SAAD,CAAxB;;AACA,YAAI,MAAJ,EAAY;AACV,gBAAM,IAAI,KAAJ,gCAAwB,MAAxB,EAAN;AACD;AACF;AACF;;AAGD,IAAA,OAAO,CAAC,OAAR,CAAgB,UAAA,KAAK,EAAG;AACtB,MAAA,QAAQ,CAAC,GAAT,CAAa,KAAb,EAAoB,SAApB;AACD,KAFD;AAGD,GAnBD;AAqBA,SAAO,QAAP;AACD;;AA3BD,OAAA,CAAA,OAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_1 = require(\"./enhancers/index\");\nfunction expandAliases(props) {\n    const propNames = Object.keys(props);\n    const newProps = new Map();\n    propNames.forEach(propName => {\n        const propValue = props[propName];\n        const aliases = index_1.propAliases[propName] || [propName];\n        if (process.env.NODE_ENV !== 'production') {\n            const validator = index_1.propValidators[propName];\n            if (validator) {\n                const result = validator(propValue);\n                if (result) {\n                    throw new Error(`ðŸ“¦ ui-box: ${result}`);\n                }\n            }\n        }\n        aliases.forEach(alias => {\n            newProps.set(alias, propValue);\n        });\n    });\n    return newProps;\n}\nexports.default = expandAliases;\n//# sourceMappingURL=expand-aliases.js.map"]},"metadata":{},"sourceType":"script"}