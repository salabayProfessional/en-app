{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/macbookpro/Documents/GitHub/en-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar cache = new Map();\n\nfunction get(property, value) {\n  return cache.get(property + value);\n}\n\nexports.get = get;\n\nfunction set(property, value, className) {\n  if (process.env.NODE_ENV !== 'production') {\n    var valueType = typeof value;\n\n    if (valueType !== 'boolean' && valueType !== 'number' && valueType !== 'string') {\n      var encodedValue = JSON.stringify(value);\n      throw new TypeError(\"\\uD83D\\uDCE6 ui-box: invalid cache value \\u201C\".concat(encodedValue, \"\\u201D. Only booleans, numbers and strings are supported.\"));\n    }\n  }\n\n  cache.set(property + value, className);\n}\n\nexports.set = set;\n\nfunction entries() {\n  return _toConsumableArray(cache);\n}\n\nexports.entries = entries;\n\nfunction hydrate(newEntries) {\n  cache = new Map([].concat(_toConsumableArray(cache), _toConsumableArray(newEntries)));\n}\n\nexports.hydrate = hydrate;\n\nfunction clear() {\n  cache.clear();\n}\n\nexports.clear = clear;","map":{"version":3,"sources":["../../src/cache.ts"],"names":[],"mappings":";;;;;;;AAGA,IAAI,KAAK,GAAG,IAAI,GAAJ,EAAZ;;AAEA,SAAgB,GAAhB,CAAoB,QAApB,EAAsC,KAAtC,EAAuD;AACrD,SAAO,KAAK,CAAC,GAAN,CAAU,QAAQ,GAAG,KAArB,CAAP;AACD;;AAFD,OAAA,CAAA,GAAA,GAAA,GAAA;;AAIA,SAAgB,GAAhB,CAAoB,QAApB,EAAsC,KAAtC,EAAkE,SAAlE,EAAmF;AACjF,MAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAM,SAAS,GAAG,OAAO,KAAzB;;AACA,QACE,SAAS,KAAK,SAAd,IACA,SAAS,KAAK,QADd,IAEA,SAAS,KAAK,QAHhB,EAIE;AACA,UAAM,YAAY,GAAG,IAAI,CAAC,SAAL,CAAe,KAAf,CAArB;AACA,YAAM,IAAI,SAAJ,0DAC+B,YAD/B,+DAAN;AAGD;AACF;;AAED,EAAA,KAAK,CAAC,GAAN,CAAU,QAAQ,GAAG,KAArB,EAA4B,SAA5B;AACD;;AAhBD,OAAA,CAAA,GAAA,GAAA,GAAA;;AAkBA,SAAgB,OAAhB,GAAuB;AACrB,4BAAW,KAAX;AACD;;AAFD,OAAA,CAAA,OAAA,GAAA,OAAA;;AAKA,SAAgB,OAAhB,CAAwB,UAAxB,EAAgD;AAC9C,EAAA,KAAK,GAAG,IAAI,GAAJ,8BAA4B,KAA5B,sBAAsC,UAAtC,GAAR;AACD;;AAFD,OAAA,CAAA,OAAA,GAAA,OAAA;;AAIA,SAAgB,KAAhB,GAAqB;AACnB,EAAA,KAAK,CAAC,KAAN;AACD;;AAFD,OAAA,CAAA,KAAA,GAAA,KAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet cache = new Map();\nfunction get(property, value) {\n    return cache.get(property + value);\n}\nexports.get = get;\nfunction set(property, value, className) {\n    if (process.env.NODE_ENV !== 'production') {\n        const valueType = typeof value;\n        if (valueType !== 'boolean' &&\n            valueType !== 'number' &&\n            valueType !== 'string') {\n            const encodedValue = JSON.stringify(value);\n            throw new TypeError(`üì¶ ui-box: invalid cache value ‚Äú${encodedValue}‚Äù. Only booleans, numbers and strings are supported.`);\n        }\n    }\n    cache.set(property + value, className);\n}\nexports.set = set;\nfunction entries() {\n    return [...cache];\n}\nexports.entries = entries;\nfunction hydrate(newEntries) {\n    cache = new Map([...cache, ...newEntries]);\n}\nexports.hydrate = hydrate;\nfunction clear() {\n    cache.clear();\n}\nexports.clear = clear;\n//# sourceMappingURL=cache.js.map"]},"metadata":{},"sourceType":"script"}