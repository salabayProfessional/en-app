{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\nconst deleteElementFromArr = (start, end, arr) => {\n  return [...arr.slice(0, end), ...arr.slice(start + 1)];\n};\n\nconst initialState = {\n  dictionaryTests: []\n};\nconst dictionary = createSlice({\n  name: \"dictionary\",\n  initialState,\n  reducers: {\n    add_dictionary_part: (state, action) => {\n      state.dictionaryTests.push(action.payload);\n    },\n    delete_dictionary_part: (state, action) => {\n      const start = state.dictionaryTests.slice(0, action.payload.id);\n      const end = state.dictionaryTests.slice(action.payload.id + 1);\n      state.dictionaryTests = deleteElementFromArr(0, action.payload.id + 1);\n    }\n  },\n  extraReducers: state => state\n});\nexport const {\n  add_dictionary_part,\n  delete_dictionary_part\n} = dictionary.actions;\nexport default dictionary.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/store/slices/dictionaryReducer.ts"],"names":["createSlice","deleteElementFromArr","start","end","arr","slice","initialState","dictionaryTests","dictionary","name","reducers","add_dictionary_part","state","action","push","payload","delete_dictionary_part","id","extraReducers","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;;AAEA,MAAMC,oBAAoB,GAAG,CAACC,KAAD,EAAgBC,GAAhB,EAA6BC,GAA7B,KAA0C;AACnE,SAAO,CAAC,GAAGA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAaF,GAAb,CAAJ,EAAuB,GAAGC,GAAG,CAACC,KAAJ,CAAUH,KAAK,GAAG,CAAlB,CAA1B,CAAP;AACH,CAFD;;AAIA,MAAMI,YAAiB,GAAG;AACtBC,EAAAA,eAAe,EAAE;AADK,CAA1B;AAIA,MAAMC,UAAU,GAAGR,WAAW,CAAC;AAC3BS,EAAAA,IAAI,EAAE,YADqB;AAE3BH,EAAAA,YAF2B;AAG3BI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,mBAAmB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACL,eAAN,CAAsBO,IAAtB,CAA2BD,MAAM,CAACE,OAAlC;AACH,KAHK;AAINC,IAAAA,sBAAsB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACvC,YAAMX,KAAK,GAAGU,KAAK,CAACL,eAAN,CAAsBF,KAAtB,CAA4B,CAA5B,EAA+BQ,MAAM,CAACE,OAAP,CAAeE,EAA9C,CAAd;AACA,YAAMd,GAAG,GAAGS,KAAK,CAACL,eAAN,CAAsBF,KAAtB,CAA4BQ,MAAM,CAACE,OAAP,CAAeE,EAAf,GAAoB,CAAhD,CAAZ;AACAL,MAAAA,KAAK,CAACL,eAAN,GAAwBN,oBAAoB,CAAC,CAAD,EAAIY,MAAM,CAACE,OAAP,CAAeE,EAAf,GAAoB,CAAxB,CAA5C;AACH;AARK,GAHiB;AAa3BC,EAAAA,aAAa,EAAGN,KAAD,IAAgBA;AAbJ,CAAD,CAA9B;AAgBA,OAAO,MAAM;AAAED,EAAAA,mBAAF;AAAuBK,EAAAA;AAAvB,IAAkDR,UAAU,CAACW,OAAnE;AAEP,eAAeX,UAAU,CAACY,OAA1B","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nconst deleteElementFromArr = (start: number, end: number, arr: any) => {\n    return [...arr.slice(0, end), ...arr.slice(start + 1)];\n};\n\nconst initialState: any = {\n    dictionaryTests: [],\n}\n\nconst dictionary = createSlice({\n    name: \"dictionary\",\n    initialState,\n    reducers: {\n        add_dictionary_part: (state, action) => {\n            state.dictionaryTests.push(action.payload);\n        },\n        delete_dictionary_part: (state, action) => {\n            const start = state.dictionaryTests.slice(0, action.payload.id);\n            const end = state.dictionaryTests.slice(action.payload.id + 1);\n            state.dictionaryTests = deleteElementFromArr(0, action.payload.id + 1, );\n        },\n    },\n    extraReducers: (state: any) => state\n});\n\nexport const { add_dictionary_part, delete_dictionary_part } = dictionary.actions;\n\nexport default dictionary.reducer;"]},"metadata":{},"sourceType":"module"}