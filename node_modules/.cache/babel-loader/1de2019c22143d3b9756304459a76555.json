{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\nconst deleteEmentFromArr = () => {\n  const start = state.dictionaryTests.slice(0, action.payload.id);\n  const end = state.dictionaryTests.slice(action.payload.id + 1);\n};\n\nconst initialState = {\n  dictionaryTests: []\n};\nconst dictionary = createSlice({\n  name: \"dictionary\",\n  initialState,\n  reducers: {\n    add_dictionary_part: (state, action) => {\n      state.dictionaryTests.push(action.payload);\n    },\n    delete_dictionary_part: (state, action) => {\n      const start = state.dictionaryTests.slice(0, action.payload.id);\n      const end = state.dictionaryTests.slice(action.payload.id + 1);\n      state.dictionaryTests = [...start, ...end];\n    }\n  },\n  extraReducers: state => state\n});\nexport const {\n  add_dictionary_part,\n  delete_dictionary_part\n} = dictionary.actions;\nexport default dictionary.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/store/slices/dictionaryReducer.ts"],"names":["createSlice","deleteEmentFromArr","start","state","dictionaryTests","slice","action","payload","id","end","initialState","dictionary","name","reducers","add_dictionary_part","push","delete_dictionary_part","extraReducers","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,QAAMC,KAAK,GAAGC,KAAK,CAACC,eAAN,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+BC,MAAM,CAACC,OAAP,CAAeC,EAA9C,CAAd;AACA,QAAMC,GAAG,GAAGN,KAAK,CAACC,eAAN,CAAsBC,KAAtB,CAA4BC,MAAM,CAACC,OAAP,CAAeC,EAAf,GAAoB,CAAhD,CAAZ;AACH,CAHD;;AAKA,MAAME,YAAiB,GAAG;AACtBN,EAAAA,eAAe,EAAE;AADK,CAA1B;AAIA,MAAMO,UAAU,GAAGX,WAAW,CAAC;AAC3BY,EAAAA,IAAI,EAAE,YADqB;AAE3BF,EAAAA,YAF2B;AAG3BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,mBAAmB,EAAE,CAACX,KAAD,EAAQG,MAAR,KAAmB;AACpCH,MAAAA,KAAK,CAACC,eAAN,CAAsBW,IAAtB,CAA2BT,MAAM,CAACC,OAAlC;AACH,KAHK;AAINS,IAAAA,sBAAsB,EAAE,CAACb,KAAD,EAAQG,MAAR,KAAmB;AACvC,YAAMJ,KAAK,GAAGC,KAAK,CAACC,eAAN,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+BC,MAAM,CAACC,OAAP,CAAeC,EAA9C,CAAd;AACA,YAAMC,GAAG,GAAGN,KAAK,CAACC,eAAN,CAAsBC,KAAtB,CAA4BC,MAAM,CAACC,OAAP,CAAeC,EAAf,GAAoB,CAAhD,CAAZ;AACAL,MAAAA,KAAK,CAACC,eAAN,GAAwB,CAAC,GAAGF,KAAJ,EAAW,GAAGO,GAAd,CAAxB;AACH;AARK,GAHiB;AAa3BQ,EAAAA,aAAa,EAAGd,KAAD,IAAgBA;AAbJ,CAAD,CAA9B;AAgBA,OAAO,MAAM;AAAEW,EAAAA,mBAAF;AAAuBE,EAAAA;AAAvB,IAAkDL,UAAU,CAACO,OAAnE;AAEP,eAAeP,UAAU,CAACQ,OAA1B","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nconst deleteEmentFromArr = () => {\n    const start = state.dictionaryTests.slice(0, action.payload.id);\n    const end = state.dictionaryTests.slice(action.payload.id + 1);\n}\n\nconst initialState: any = {\n    dictionaryTests: [],\n}\n\nconst dictionary = createSlice({\n    name: \"dictionary\",\n    initialState,\n    reducers: {\n        add_dictionary_part: (state, action) => {\n            state.dictionaryTests.push(action.payload);\n        },\n        delete_dictionary_part: (state, action) => {\n            const start = state.dictionaryTests.slice(0, action.payload.id);\n            const end = state.dictionaryTests.slice(action.payload.id + 1);\n            state.dictionaryTests = [...start, ...end];\n        },\n    },\n    extraReducers: (state: any) => state\n});\n\nexport const { add_dictionary_part, delete_dictionary_part } = dictionary.actions;\n\nexport default dictionary.reducer;"]},"metadata":{},"sourceType":"module"}