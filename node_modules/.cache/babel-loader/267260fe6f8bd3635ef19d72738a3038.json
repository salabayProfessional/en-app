{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Sign-in/component/Sign-in-form/Sign-in-form.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { FormGroup, Label, FormFeedback, FormText } from 'reactstrap';\nimport { BTN_BG } from '../../../../classes';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignInForm = () => {\n  _s();\n\n  const onSubmit = values => {\n    alert(JSON.stringify(values));\n  };\n\n  const schema = Yup.object().shape({\n    name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n    password: Yup.string().required('Required'),\n    repeatPassword: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email').required('Required')\n  });\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"name\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control btn-bg\",\n          ...register(\"name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: \"Error email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormText, {\n          children: \"Example help text that remains unchanged.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"email\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control btn-bg\",\n          ...register(\"email\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n          children: \"Error password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormText, {\n          children: \"Example help text that remains unchanged.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: \"position-relative\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: BTN_BG,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInForm, \"zkd3JmxRK/AmyiWtSfciHeYO5Zk=\", false, function () {\n  return [useForm];\n});\n\n_c = SignInForm;\nexport default SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Sign-in/component/Sign-in-form/Sign-in-form.tsx"],"names":["React","FormGroup","Label","FormFeedback","FormText","BTN_BG","Yup","useForm","yupResolver","SignInForm","onSubmit","values","alert","JSON","stringify","schema","object","shape","name","string","min","max","required","password","repeatPassword","email","register","handleSubmit","resolver"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,YAA3B,EAAyCC,QAAzC,QAAyD,YAAzD;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AAUjC,QAAMC,QAAQ,GAAIC,MAAD,IAAe;AAC9BC,IAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAD,CAAL;AACD,GAFD;;AAIA,QAAMI,MAAM,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,IAAI,EAAEZ,GAAG,CAACa,MAAJ,GACLC,GADK,CACD,CADC,EACE,YADF,EAELC,GAFK,CAED,EAFC,EAEG,WAFH,EAGLC,QAHK,CAGI,UAHJ,CAD0B;AAKhCC,IAAAA,QAAQ,EAAEjB,GAAG,CAACa,MAAJ,GAAaG,QAAb,CAAsB,UAAtB,CALsB;AAMhCE,IAAAA,cAAc,EAAElB,GAAG,CAACa,MAAJ,GAAaG,QAAb,CAAsB,UAAtB,CANgB;AAOhCG,IAAAA,KAAK,EAAEnB,GAAG,CAACa,MAAJ,GAAaM,KAAb,CAAmB,eAAnB,EAAoCH,QAApC,CAA6C,UAA7C;AAPyB,GAAnB,CAAf;AAUA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BpB,OAAO,CAAC;AAACqB,IAAAA,QAAQ,EAAEpB,WAAW,CAAEO,MAAF;AAAtB,GAAD,CAA1C;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEY,YAAY,CAACjB,QAAD,CAA5B;AAAA,4BACE;AAAA,8BACE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,SAAS,EAAC,qBAAjB;AAAA,aAA2CgB,QAAQ,CAAC,MAAD;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,SAAS,EAAC,qBAAjB;AAAA,aAA2CA,QAAQ,CAAC,OAAD;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,mBAArB;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAErB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAhDD;;GAAMI,U;UAwB+BF,O;;;KAxB/BE,U;AAkDN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { FormGroup, Label, FormFeedback, FormText } from 'reactstrap';\nimport { BTN_BG } from '../../../../classes';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nconst SignInForm: React.FC = () => {\n\n  interface I {\n    name: string,\n    password: string,\n    repeatPassword: string,\n    email: string,\n    submit: boolean,\n  }\n\n  const onSubmit = (values: I) => {\n    alert(JSON.stringify(values));\n  };\n\n  const schema = Yup.object().shape({\n    name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n    password: Yup.string().required('Required'),\n    repeatPassword: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email').required('Required'),\n  });\n\n  const { register, handleSubmit } = useForm({resolver: yupResolver (schema)});\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div >\n        <FormGroup>\n          <Label for=\"name\">Email</Label>\n          <input className=\"form-control btn-bg\" {...register(\"name\")}/>\n          <FormFeedback>Error email</FormFeedback>\n          <FormText>Example help text that remains unchanged.</FormText>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">Password</Label>\n          <input className=\"form-control btn-bg\" {...register(\"email\")}></input>  \n          <FormFeedback>Error password</FormFeedback>\n          <FormText>Example help text that remains unchanged.</FormText>\n        </FormGroup>\n      </div>\n      \n      <FormGroup className=\"position-relative\">\n        <button type=\"submit\" className={BTN_BG}>SUBMIT</button>\n      </FormGroup>\n    </form>\n  )\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}