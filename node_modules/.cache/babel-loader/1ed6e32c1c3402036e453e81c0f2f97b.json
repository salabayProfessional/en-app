{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\nconst findPart = (partName, state) => state.dictionary.findIndex(item => item.part === partName);\n\nconst foundWord = (word, state, partIdx) => state.dictionary[partIdx].words.findIndex(item => item.word === word);\n\nconst initialState = {\n  authentication: true,\n  role: \"admin\",\n  name: \"oleg\",\n  surname: \"salabay\",\n  email: \"olegsalabaymac@gmail.com\",\n  photo: \"\",\n  describe: \"\",\n  password: \"1234\",\n  dictionary: [],\n  homework: []\n};\nconst auth = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    log_out: state => {\n      state.authentication = false;\n    },\n    sign_in: state => {\n      state.authentication = true;\n    },\n    add_part_own_dictionary: (state, {\n      payload\n    }) => {\n      state.dictionary = [...state.dictionary, payload];\n    },\n    add_word_own_dictionary: (state, {\n      payload\n    }) => {\n      const length = state.dictionary.length;\n      state.dictionary[length - 1].words = [...state.dictionary[length - 1].words, ...payload.word];\n    },\n    remove_word: (state, {\n      payload\n    }) => {\n      const {\n        word,\n        part\n      } = payload;\n      const foundedPart = findPart(part, state);\n      const foundedWord = foundWord(word, state, foundedPart);\n      state.dictionary[foundedPart].words = [...state.dictionary[foundedPart].words.slice(0, foundedWord), ...state.dictionary[foundedPart].words.slice(foundedWord + 1)];\n    },\n    add_home_work: (state, {\n      payload\n    }) => {\n      state.homework = [...state.homework, payload];\n    },\n    remove_home_work: (state, {\n      payload\n    }) => {\n      console.log(state, payload.name);\n    },\n    setRole: (state, {\n      payload\n    }) => {\n      state.role = payload;\n    }\n  }\n});\nconst {\n  log_out,\n  sign_in,\n  add_word_own_dictionary,\n  add_part_own_dictionary,\n  remove_word,\n  add_home_work,\n  remove_home_work,\n  setRole\n} = auth.actions;\nexport default auth.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/store/slices/authReducer.ts"],"names":["createSlice","findPart","partName","state","dictionary","findIndex","item","part","foundWord","word","partIdx","words","initialState","authentication","role","name","surname","email","photo","describe","password","homework","auth","reducers","log_out","sign_in","add_part_own_dictionary","payload","add_word_own_dictionary","length","remove_word","foundedPart","foundedWord","slice","add_home_work","remove_home_work","console","log","setRole","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport { AuthReducer } from './types';\n\nconst findPart = (partName: string, state: AuthReducer) => state.dictionary.findIndex((item) => item.part === partName);\nconst foundWord = (word: string, state: AuthReducer, partIdx: number) => state.dictionary[partIdx].words.findIndex((item) => item.word === word);\n\nconst initialState: AuthReducer = {\n  authentication: true,\n  role: \"admin\",\n  name: \"oleg\",\n  surname: \"salabay\",\n  email: \"olegsalabaymac@gmail.com\",\n  photo: \"\",\n  describe: \"\",\n  password: \"1234\",\n  dictionary: [],\n  homework: [],\n};\n\nconst auth = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n      log_out: (state) => {\n        state.authentication = false\n      },\n      sign_in: (state) => {\n        state.authentication = true\n      },\n      add_part_own_dictionary: (state, {payload}) => {\n        state.dictionary = [...state.dictionary, payload];\n      },\n      add_word_own_dictionary: (state, {payload}) => {\n        const length = state.dictionary.length;\n        state.dictionary[length - 1].words = [...state.dictionary[length - 1].words, ...payload.word];\n      },\n      remove_word: (state, {payload}) => {\n        const {word, part} = payload;\n        const foundedPart = findPart(part, state);\n        const foundedWord = foundWord(word, state, foundedPart);\n\n        state.dictionary[foundedPart].words = [\n          ...state.dictionary[foundedPart].words.slice(0, foundedWord), \n          ...state.dictionary[foundedPart].words.slice(foundedWord + 1, )\n        ]\n      },\n      add_home_work: (state, {payload}) => {\n        state.homework = [...state.homework, payload];\n      },\n      remove_home_work: (state, {payload}) => {\n        console.log(state, payload.name)\n      },\n      setRole: (state, {payload}) => {\n        state.role = payload;\n      }\n    },\n});\n\nconst { \n  log_out, \n  sign_in, \n  add_word_own_dictionary, \n  add_part_own_dictionary, \n  remove_word, \n  add_home_work,\n  remove_home_work,\n  setRole,\n} = auth.actions;\n\nexport default auth.reducer;"]},"metadata":{},"sourceType":"module"}