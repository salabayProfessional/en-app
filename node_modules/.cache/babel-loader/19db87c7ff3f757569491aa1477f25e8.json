{"ast":null,"code":"import{Field}from\"formik\";import optionsData from\"../../mockData/options\";import{generateString}from\"../../specialFunction/specialFunction\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var optionsForTest=function optionsForTest(values){return/*#__PURE__*/_jsx(\"div\",{className:\"options__content__list\",children:optionsData.map(function(item){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"group-type__options\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"start-title\",children:item.title}),/*#__PURE__*/_jsx(\"div\",{className:\"group-type__option-content\",children:item.options.map(function(option){return/*#__PURE__*/_jsxs(\"div\",{className:\"group-type__option-content-inner\",children:[/*#__PURE__*/_jsx(\"div\",{children:option}),/*#__PURE__*/_jsx(\"div\",{className:\"input-checkbox \".concat(option===values[item.title]&&\"active\")}),/*#__PURE__*/_jsx(Field,{name:item.title,value:option,type:\"radio\",className:\"filed-checkbox\"})]},generateString());})})]})},generateString());})});};export{optionsForTest};","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/component/Options/OptionsType.tsx"],"names":["Field","optionsData","generateString","optionsForTest","values","map","item","title","options","option"],"mappings":"AAAA,OAASA,KAAT,KAAsB,QAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,OAASC,cAAT,KAA+B,uCAA/B,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,MAAD,CAAiB,CACtC,mBACE,YAAK,SAAS,CAAC,wBAAf,UAEIH,WAAW,CAACI,GAAZ,CAAgB,SAACC,IAAD,qBACd,iCACE,aAAK,SAAS,CAAC,qBAAf,wBACE,WAAI,SAAS,CAAC,aAAd,UAA6BA,IAAI,CAACC,KAAlC,EADF,cAEE,YAAK,SAAS,CAAC,4BAAf,UAEID,IAAI,CAACE,OAAL,CAAaH,GAAb,CAAiB,SAACI,MAAD,qBACf,aAAK,SAAS,CAAC,kCAAf,wBACE,qBAAMA,MAAN,EADF,cAEE,YAAK,SAAS,0BAAoBA,MAAM,GAAKL,MAAM,CAACE,IAAI,CAACC,KAAN,CAAjB,EAAiC,QAArD,CAAd,EAFF,cAGE,KAAC,KAAD,EAAO,IAAI,CAAED,IAAI,CAACC,KAAlB,CAAyB,KAAK,CAAEE,MAAhC,CAAwC,IAAI,CAAC,OAA7C,CAAqD,SAAS,CAAC,gBAA/D,EAHF,GAAuDP,cAAc,EAArE,CADe,EAAjB,CAFJ,EAFF,GADF,EAASA,cAAc,EAAvB,CADc,EAAhB,CAFJ,EADF,CAwBD,CAzBD,CA2BA,OACEC,cADF","sourcesContent":["import { Field } from \"formik\";\nimport optionsData from \"../../mockData/options\";\nimport { generateString } from \"../../specialFunction/specialFunction\";\n\nconst optionsForTest = (values: any) => {\n  return (\n    <div className=\"options__content__list\">\n      { \n        optionsData.map((item) => (\n          <li key={generateString()}>     \n            <div className=\"group-type__options\">\n              <h3 className=\"start-title\">{item.title}</h3>\n              <div className=\"group-type__option-content\">\n                {\n                  item.options.map((option: string | number) => (\n                    <div className=\"group-type__option-content-inner\" key={generateString()}>\n                      <div>{option}</div>\n                      <div className={`input-checkbox ${option === values[item.title] && \"active\"}`} />\n                      <Field name={item.title} value={option} type=\"radio\" className=\"filed-checkbox\" />\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          </li>\n        ))\n      } \n    </div>\n  )\n};\n\nexport {\n  optionsForTest,\n};\n"]},"metadata":{},"sourceType":"module"}