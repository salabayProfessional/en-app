{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Dictionary/Dictionary.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport DictionaryOptions from './components/DictionaryOptions/DictionaryOptions';\nimport TableWords from './components/DictionaryPart/DictionaryPart';\nimport \"./Dictionary.scss\";\nimport Row from \"../../../../component/Row/Row\";\nimport { useHomeWork } from '../../../../hooks/useHomeWork';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nconst Dictionary = () => {\n  _s();\n\n  const [isList, setIsList] = useState(false);\n\n  const toggleList = () => setIsList(!isList);\n\n  const homeWorks = useHomeWork();\n  const [activeHomeWork, setActiveHomeWork] = useState();\n  const [isHideColumnUa, setIsHideColumnUa] = useState(false);\n  const [isHideColumnEn, setIsHideColumnEn] = useState(false);\n\n  const toggleHideColumnUa = () => setIsHideColumnUa(!isHideColumnUa);\n\n  const toggleHideColumnEn = () => setIsHideColumnEn(!isHideColumnEn);\n\n  const toggleActiveIsetActiveNewItemtem = dictionary => {\n    if (dictionary.name === activeHomeWork) {\n      return;\n    } else {\n      setActiveHomeWork(dictionary);\n    }\n  };\n\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  useEffect(() => {\n    if (homeWorks) {\n      setActiveHomeWork(homeWorks[0]);\n    }\n  }, [homeWorks]);\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dictionary\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        Left: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-words\",\n          children: /*#__PURE__*/_jsxDEV(TableWords, {\n            activeHomeWork: activeHomeWork,\n            register: register,\n            isHideColumnUa: isHideColumnUa,\n            isHideColumnEn: isHideColumnEn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this),\n        Right: /*#__PURE__*/_jsxDEV(DictionaryOptions, {\n          isList: isList,\n          activeHomeWork: activeHomeWork,\n          setActiveNewItem: setActiveNewItem,\n          toggleList: toggleList,\n          reset: reset,\n          toggleHideColumnUa: toggleHideColumnUa,\n          toggleHideColumnEn: toggleHideColumnEn,\n          homeWorks: homeWorks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this),\n        rightWidth: 3,\n        leftWidth: 9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dictionary, \"ilcplK74qA+zqf1eFW4PYsATqos=\", false, function () {\n  return [useHomeWork, useForm];\n});\n\n_c = Dictionary;\nexport default Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/Pages/Profile/underPages/Dictionary/Dictionary.tsx"],"names":["React","useEffect","useState","useForm","DictionaryOptions","TableWords","Row","useHomeWork","Dictionary","isList","setIsList","toggleList","homeWorks","activeHomeWork","setActiveHomeWork","isHideColumnUa","setIsHideColumnUa","isHideColumnEn","setIsHideColumnEn","toggleHideColumnUa","toggleHideColumnEn","toggleActiveIsetActiveNewItemtem","dictionary","name","register","handleSubmit","reset","onSubmit","data","console","log","setActiveNewItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAOC,iBAAP,MAA8B,kDAA9B;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,OAAO,mBAAP;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAQC;;AAED,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMS,UAAU,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAAlC;;AACA,QAAMG,SAAS,GAAGL,WAAW,EAA7B;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,EAApD;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMiB,kBAAkB,GAAG,MAAMH,iBAAiB,CAAC,CAACD,cAAF,CAAlD;;AACA,QAAMK,kBAAkB,GAAG,MAAMF,iBAAiB,CAAC,CAACD,cAAF,CAAlD;;AACA,QAAMI,gCAAgC,GAAIC,UAAD,IAAgC;AACvE,QAAGA,UAAU,CAACC,IAAX,KAAoBV,cAAvB,EAAuC;AACrC;AACD,KAFD,MAEO;AACLC,MAAAA,iBAAiB,CAACQ,UAAD,CAAjB;AACD;AACF,GAND;;AAQA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAoCvB,OAAO,EAAjD;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGW,SAAH,EAAc;AACZE,MAAAA,iBAAiB,CAACF,SAAS,CAAC,CAAD,CAAV,CAAjB;AACD;AACF,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;;AAMA,QAAMe,QAAQ,GAAIC,IAAD,IAAe;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEH,YAAY,CAACE,QAAD,CAA5B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,IAAI,eACF;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,cAAc,EAAEd,cADlB;AAEE,YAAA,QAAQ,EAAEW,QAFZ;AAGE,YAAA,cAAc,EAAET,cAHlB;AAIE,YAAA,cAAc,EAAEE;AAJlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAWE,QAAA,KAAK,eACH,QAAC,iBAAD;AACI,UAAA,MAAM,EAAER,MADZ;AAEI,UAAA,cAAc,EAAEI,cAFpB;AAGI,UAAA,gBAAgB,EAAEkB,gBAHtB;AAII,UAAA,UAAU,EAAEpB,UAJhB;AAKI,UAAA,KAAK,EAAEe,KALX;AAMI,UAAA,kBAAkB,EAAEP,kBANxB;AAOI,UAAA,kBAAkB,EAAEC,kBAPxB;AAQI,UAAA,SAAS,EAAER;AARf;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAuBE,QAAA,UAAU,EAAE,CAvBd;AAwBE,QAAA,SAAS,EAAE;AAxBb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA9DD;;GAAMJ,U;UAGcD,W,EAewBJ,O;;;KAlBtCK,U;AAgEN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { shuffle } from '../../../../specialFunction/specialFunction';\nimport DictionaryOptions from './components/DictionaryOptions/DictionaryOptions';\nimport TableWords from './components/DictionaryPart/DictionaryPart';\nimport \"./Dictionary.scss\";\nimport Row from \"../../../../component/Row/Row\";\nimport { useHomeWork } from '../../../../hooks/useHomeWork';\n\ninterface DictionaryPart {\n  name: string, \n  words: {\n    en: string, \n    ua: string\n  }\n};\n\nconst Dictionary: React.FC = () => {\n  const [isList, setIsList] = useState(false);\n  const toggleList = () => setIsList(!isList);\n  const homeWorks = useHomeWork();\n  const [activeHomeWork, setActiveHomeWork] = useState<any>();\n  const [isHideColumnUa, setIsHideColumnUa] = useState(false);\n  const [isHideColumnEn, setIsHideColumnEn] = useState(false);\n\n  const toggleHideColumnUa = () => setIsHideColumnUa(!isHideColumnUa);\n  const toggleHideColumnEn = () => setIsHideColumnEn(!isHideColumnEn);\n  const toggleActiveIsetActiveNewItemtem = (dictionary: DictionaryPart) => {\n    if(dictionary.name === activeHomeWork) {\n      return\n    } else {\n      setActiveHomeWork(dictionary);\n    }\n  }\n\n  const { register, handleSubmit, reset } = useForm();\n\n  useEffect(() => {\n    if(homeWorks) {\n      setActiveHomeWork(homeWorks[0]);\n    }\n  }, [homeWorks])\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"dictionary\">\n        <Row \n          Left={(\n            <div className=\"table-words\">\n              <TableWords \n                activeHomeWork={activeHomeWork} \n                register={register}\n                isHideColumnUa={isHideColumnUa}\n                isHideColumnEn={isHideColumnEn}\n              />\n            </div>\n          )}\n          Right={(\n            <DictionaryOptions \n                isList={isList}\n                activeHomeWork={activeHomeWork}\n                setActiveNewItem={setActiveNewItem}\n                toggleList={toggleList}\n                reset={reset}\n                toggleHideColumnUa={toggleHideColumnUa}\n                toggleHideColumnEn={toggleHideColumnEn}\n                homeWorks={homeWorks}\n            />\n          )}\n          rightWidth={3}\n          leftWidth={9}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default Dictionary;"]},"metadata":{},"sourceType":"module"}