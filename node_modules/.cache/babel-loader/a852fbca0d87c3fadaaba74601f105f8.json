{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import rootReducer from'./slices/rootSlice';import{persistStore,persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';import{createWhitelistFilter}from'redux-persist-transform-filter';var persistConfig={key:'root',storage:storage,transforms:[createWhitelistFilter(\"tests\",[\"allTests\"]),createWhitelistFilter(\"result\",[\"results\"]),createWhitelistFilter(\"auth\",[\"dictionary\",\"homework\"])],whitelist:[\"tests\",\"result\",\"auth\"]};var persistedReducer=persistReducer(persistConfig,rootReducer);export var store=configureStore({reducer:persistedReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:false});}});export var localStore=persistStore(store);export default store;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/en-app/src/store/store.ts"],"names":["configureStore","rootReducer","persistStore","persistReducer","storage","createWhitelistFilter","persistConfig","key","transforms","whitelist","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","localStore"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,OAASC,qBAAT,KAAsC,gCAAtC,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBH,OAAO,CAAPA,OAFoB,CAGpBI,UAAU,CAAE,CACVH,qBAAqB,CAAC,OAAD,CAAU,CAAC,UAAD,CAAV,CADX,CAEVA,qBAAqB,CAAC,QAAD,CAAW,CAAC,SAAD,CAAX,CAFX,CAGVA,qBAAqB,CAAC,MAAD,CAAS,CAAC,YAAD,CAAe,UAAf,CAAT,CAHX,CAHQ,CAQpBI,SAAS,CAAE,CAAC,OAAD,CAAU,QAAV,CAAoB,MAApB,CARS,CAAtB,CAWA,GAAMC,CAAAA,gBAAgB,CAAGP,cAAc,CAACG,aAAD,CAAgBL,WAAhB,CAAvC,CAEA,MAAO,IAAMU,CAAAA,KAAK,CAAGX,cAAc,CAAC,CAChCY,OAAO,CAAEF,gBADuB,CAEhCG,UAAU,CAAE,oBAACC,oBAAD,QACZA,CAAAA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,KADA,CAAD,CADR,EAFoB,CAAD,CAA5B,CAQP,MAAO,IAAMC,CAAAA,UAAU,CAAGd,YAAY,CAACS,KAAD,CAA/B,CACP,cAAeA,CAAAA,KAAf","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './slices/rootSlice';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { createWhitelistFilter } from 'redux-persist-transform-filter';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  transforms: [\n    createWhitelistFilter(\"tests\", [\"allTests\"]),\n    createWhitelistFilter(\"result\", [\"results\"]),\n    createWhitelistFilter(\"auth\", [\"dictionary\", \"homework\"]),\n  ],\n  whitelist: [\"tests\", \"result\", \"auth\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n \nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n \nexport const localStore = persistStore(store);\nexport default store;"]},"metadata":{},"sourceType":"module"}