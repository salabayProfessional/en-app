"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _buttons = require("../../buttons");

var _layers = require("../../layers");

var _scales = require("../../scales");

var _theme = require("../../theme");

var _typography = require("../../typography");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable react/prop-types */
var HorizontalOrientation = /*#__PURE__*/(0, _react.memo)(function HorizontalOrientation(_ref) {
  var anchorCta = _ref.anchorCta,
      background = _ref.background,
      description = _ref.description,
      icon = _ref.icon,
      iconBgColor = _ref.iconBgColor,
      primaryCta = _ref.primaryCta,
      title = _ref.title;
  var hasFooter = primaryCta || anchorCta;

  var _useTheme = (0, _theme.useTheme)(),
      colors = _useTheme.colors;

  var backgroundColor = background === 'light' ? 'white' : colors.gray75;
  return /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    width: "100%",
    height: "100%",
    display: "flex",
    flexDirection: "column",
    padding: (0, _scales.majorScale)(6),
    backgroundColor: backgroundColor,
    justifyContent: "center"
  }, /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    display: "flex",
    alignItems: "flex-start",
    flex: 1,
    height: "100%"
  }, /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    paddingRight: (0, _scales.majorScale)(6)
  }, /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    borderRadius: "50%",
    backgroundColor: iconBgColor,
    width: (0, _scales.majorScale)(9),
    height: (0, _scales.majorScale)(9)
  }, /*#__PURE__*/_react["default"].cloneElement(icon, {
    size: (0, _scales.majorScale)(4)
  }))), /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    display: "flex",
    flexDirection: "column",
    paddingRight: (0, _scales.majorScale)(6)
  }, /*#__PURE__*/_react["default"].createElement(_typography.Heading, {
    size: 500,
    color: colors.gray700
  }, title), description && /*#__PURE__*/_react["default"].createElement(_typography.Paragraph, {
    color: "muted",
    marginTop: (0, _scales.majorScale)(2)
  }, description), hasFooter && /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    marginTop: (0, _scales.majorScale)(5),
    display: "flex"
  }, primaryCta, primaryCta && anchorCta && /*#__PURE__*/_react["default"].cloneElement(anchorCta, {
    marginLeft: (0, _scales.majorScale)(4)
  }), !primaryCta && anchorCta))));
});
/* eslint-enable react/prop-types */

/* eslint-disable react/prop-types */

var VerticalOrientation = /*#__PURE__*/(0, _react.memo)(function VerticalOrientation(_ref2) {
  var background = _ref2.background,
      description = _ref2.description,
      icon = _ref2.icon,
      iconBgColor = _ref2.iconBgColor,
      primaryCta = _ref2.primaryCta,
      title = _ref2.title;

  var _useTheme2 = (0, _theme.useTheme)(),
      colors = _useTheme2.colors;

  var backgroundColor = background === 'light' ? 'white' : colors.gray75;
  return /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    display: "flex",
    alignItems: "center",
    flexDirection: "column",
    justifyContent: "center",
    flex: 1,
    backgroundColor: backgroundColor,
    paddingX: (0, _scales.majorScale)(5),
    paddingY: (0, _scales.majorScale)(5),
    height: "100%",
    width: "100%"
  }, /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    borderRadius: "50%",
    backgroundColor: iconBgColor,
    width: (0, _scales.majorScale)(7),
    height: (0, _scales.majorScale)(7)
  }, /*#__PURE__*/_react["default"].cloneElement(icon, {
    size: (0, _scales.majorScale)(3)
  })), /*#__PURE__*/_react["default"].createElement(_typography.Heading, {
    marginTop: (0, _scales.majorScale)(2),
    textAlign: "center",
    color: colors.gray700
  }, title), /*#__PURE__*/_react["default"].createElement(_typography.Paragraph, {
    marginTop: (0, _scales.majorScale)(2),
    textAlign: "center",
    color: colors.gray700
  }, description), primaryCta && /*#__PURE__*/_react["default"].cloneElement(primaryCta, {
    marginTop: (0, _scales.minorScale)(5)
  }));
});
/* eslint-enable react/prop-types */

var PrimaryButton = function PrimaryButton(props) {
  return /*#__PURE__*/_react["default"].createElement(_buttons.Button, (0, _extends2["default"])({
    appearance: "primary"
  }, props));
};

PrimaryButton.displayName = "PrimaryButton";

var LinkButton = function LinkButton(props) {
  return /*#__PURE__*/_react["default"].createElement(_typography.Link, (0, _extends2["default"])({}, props, {
    size: 300,
    lineHeight: "34px"
  }));
};

LinkButton.displayName = "LinkButton";
var EmptyState = /*#__PURE__*/(0, _react.memo)(function EmptyState(_ref3) {
  var anchorCta = _ref3.anchorCta,
      _ref3$background = _ref3.background,
      background = _ref3$background === void 0 ? 'light' : _ref3$background,
      description = _ref3.description,
      icon = _ref3.icon,
      iconBgColor = _ref3.iconBgColor,
      _ref3$orientation = _ref3.orientation,
      orientation = _ref3$orientation === void 0 ? 'horizontal' : _ref3$orientation,
      primaryCta = _ref3.primaryCta,
      title = _ref3.title;

  if (orientation === 'vertical') {
    return /*#__PURE__*/_react["default"].createElement(VerticalOrientation, {
      title: title,
      icon: icon,
      iconBgColor: iconBgColor,
      background: background,
      description: description,
      primaryCta: primaryCta
    });
  } else {
    return /*#__PURE__*/_react["default"].createElement(HorizontalOrientation, {
      title: title,
      icon: icon,
      iconBgColor: iconBgColor,
      background: background,
      description: description,
      primaryCta: primaryCta,
      anchorCta: anchorCta
    });
  }
});
EmptyState.PrimaryButton = PrimaryButton;
EmptyState.LinkButton = LinkButton;
EmptyState.propTypes = {
  /** The title of the empty state */
  title: _propTypes["default"].string.isRequired,

  /** The icon used in the empty state */
  icon: _propTypes["default"].element.isRequired,

  /** The background color used for the icon circle */
  iconBgColor: _propTypes["default"].string.isRequired,

  /** The direction in which to align the empty state elements */
  orientation: _propTypes["default"].oneOf(['vertical', 'horizontal']),

  /** The description of the empty state */
  description: _propTypes["default"].string,

  /** The background used for the entire empty state container */
  background: _propTypes["default"].oneOf(['light', 'dark']),

  /** The primary CTA of the empty state */
  primaryCta: _propTypes["default"].element,

  /** The link CTA of the empty state */
  anchorCta: _propTypes["default"].element
};
var _default = EmptyState;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,