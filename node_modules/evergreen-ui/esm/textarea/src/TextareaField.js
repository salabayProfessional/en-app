import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["appearance", "description", "disabled", "hint", "id", "inputHeight", "inputWidth", "isInvalid", "label", "placeholder", "required", "resize", "spellCheck", "validationMessage"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { memo, forwardRef } from 'react';
import PropTypes from 'prop-types';
import { splitBoxProps } from 'ui-box';
import { FormField } from '../../form-field';
import { useId } from '../../hooks';
import Textarea from './Textarea';
var TextareaField = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function TextareaField(props, ref) {
  var id = useId('TextareaField', props.id);

  var appearance = props.appearance,
      description = props.description,
      disabled = props.disabled,
      hint = props.hint,
      unusedId = props.id,
      _props$inputHeight = props.inputHeight,
      inputHeight = _props$inputHeight === void 0 ? 80 : _props$inputHeight,
      _props$inputWidth = props.inputWidth,
      inputWidth = _props$inputWidth === void 0 ? '100%' : _props$inputWidth,
      isInvalid = props.isInvalid,
      label = props.label,
      placeholder = props.placeholder,
      required = props.required,
      resize = props.resize,
      spellCheck = props.spellCheck,
      validationMessage = props.validationMessage,
      rest = _objectWithoutProperties(props, _excluded);
  /**
   * Split the wrapper props from the input props.
   */


  var _splitBoxProps = splitBoxProps(rest),
      matchedProps = _splitBoxProps.matchedProps,
      remainingProps = _splitBoxProps.remainingProps;

  return /*#__PURE__*/React.createElement(FormField, _extends({
    marginBottom: 24,
    label: label,
    isRequired: required,
    hint: hint,
    description: description,
    validationMessage: validationMessage,
    labelFor: id
  }, matchedProps), /*#__PURE__*/React.createElement(Textarea, _extends({
    id: id,
    ref: ref,
    width: inputWidth,
    height: inputHeight,
    disabled: disabled,
    required: required,
    isInvalid: isInvalid,
    appearance: appearance,
    placeholder: placeholder,
    spellCheck: spellCheck,
    resize: resize
  }, remainingProps)));
}));
TextareaField.propTypes = _objectSpread(_objectSpread(_objectSpread({}, Textarea.propTypes), FormField.propTypes), {}, {
  /**
   * The label used above the input element.
   */
  label: PropTypes.node.isRequired,

  /**
   * Whether or not to show an asterix after the label.
   */
  required: PropTypes.bool,

  /**
   * An optional description of the field under the label, above the input element.
   */
  description: PropTypes.node,

  /**
   * An optional hint under the input element.
   */
  hint: PropTypes.node,

  /**
   * If a validation message is passed it is shown under the input element
   * and above the hint. This is unaffected by `isInvalid`.
   */
  validationMessage: PropTypes.node,

  /**
   * The height of the input element.
   */
  inputHeight: PropTypes.number,

  /**
   * The width of the input width.
   */
  inputWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string])
});
export default TextareaField;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXh0YXJlYS9zcmMvVGV4dGFyZWFGaWVsZC5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIm1lbW8iLCJmb3J3YXJkUmVmIiwiUHJvcFR5cGVzIiwic3BsaXRCb3hQcm9wcyIsIkZvcm1GaWVsZCIsInVzZUlkIiwiVGV4dGFyZWEiLCJUZXh0YXJlYUZpZWxkIiwicHJvcHMiLCJyZWYiLCJpZCIsImFwcGVhcmFuY2UiLCJkZXNjcmlwdGlvbiIsImRpc2FibGVkIiwiaGludCIsInVudXNlZElkIiwiaW5wdXRIZWlnaHQiLCJpbnB1dFdpZHRoIiwiaXNJbnZhbGlkIiwibGFiZWwiLCJwbGFjZWhvbGRlciIsInJlcXVpcmVkIiwicmVzaXplIiwic3BlbGxDaGVjayIsInZhbGlkYXRpb25NZXNzYWdlIiwicmVzdCIsIm1hdGNoZWRQcm9wcyIsInJlbWFpbmluZ1Byb3BzIiwicHJvcFR5cGVzIiwibm9kZSIsImlzUmVxdWlyZWQiLCJib29sIiwibnVtYmVyIiwib25lT2ZUeXBlIiwic3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxPQUFPQSxLQUFQLElBQWdCQyxJQUFoQixFQUFzQkMsVUFBdEIsUUFBd0MsT0FBeEM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsU0FBU0MsYUFBVCxRQUE4QixRQUE5QjtBQUNBLFNBQVNDLFNBQVQsUUFBMEIsa0JBQTFCO0FBQ0EsU0FBU0MsS0FBVCxRQUFzQixhQUF0QjtBQUNBLE9BQU9DLFFBQVAsTUFBcUIsWUFBckI7QUFFQSxJQUFNQyxhQUFhLGdCQUFHUCxJQUFJLGVBQ3hCQyxVQUFVLENBQUMsU0FBU00sYUFBVCxDQUF1QkMsS0FBdkIsRUFBOEJDLEdBQTlCLEVBQW1DO0FBQzVDLE1BQU1DLEVBQUUsR0FBR0wsS0FBSyxDQUFDLGVBQUQsRUFBa0JHLEtBQUssQ0FBQ0UsRUFBeEIsQ0FBaEI7O0FBRUEsTUFFRUMsVUFGRixHQXdCSUgsS0F4QkosQ0FFRUcsVUFGRjtBQUFBLE1BS0VDLFdBTEYsR0F3QklKLEtBeEJKLENBS0VJLFdBTEY7QUFBQSxNQU1FQyxRQU5GLEdBd0JJTCxLQXhCSixDQU1FSyxRQU5GO0FBQUEsTUFPRUMsSUFQRixHQXdCSU4sS0F4QkosQ0FPRU0sSUFQRjtBQUFBLE1BUU1DLFFBUk4sR0F3QklQLEtBeEJKLENBUUVFLEVBUkY7QUFBQSwyQkF3QklGLEtBeEJKLENBV0VRLFdBWEY7QUFBQSxNQVdFQSxXQVhGLG1DQVdnQixFQVhoQjtBQUFBLDBCQXdCSVIsS0F4QkosQ0FhRVMsVUFiRjtBQUFBLE1BYUVBLFVBYkYsa0NBYWUsTUFiZjtBQUFBLE1BY0VDLFNBZEYsR0F3QklWLEtBeEJKLENBY0VVLFNBZEY7QUFBQSxNQWVFQyxLQWZGLEdBd0JJWCxLQXhCSixDQWVFVyxLQWZGO0FBQUEsTUFnQkVDLFdBaEJGLEdBd0JJWixLQXhCSixDQWdCRVksV0FoQkY7QUFBQSxNQWlCRUMsUUFqQkYsR0F3QkliLEtBeEJKLENBaUJFYSxRQWpCRjtBQUFBLE1Ba0JFQyxNQWxCRixHQXdCSWQsS0F4QkosQ0FrQkVjLE1BbEJGO0FBQUEsTUFtQkVDLFVBbkJGLEdBd0JJZixLQXhCSixDQW1CRWUsVUFuQkY7QUFBQSxNQW9CRUMsaUJBcEJGLEdBd0JJaEIsS0F4QkosQ0FvQkVnQixpQkFwQkY7QUFBQSxNQXVCS0MsSUF2QkwsNEJBd0JJakIsS0F4Qko7QUEwQkE7QUFDSjtBQUNBOzs7QUFDSSx1QkFBeUNMLGFBQWEsQ0FBQ3NCLElBQUQsQ0FBdEQ7QUFBQSxNQUFRQyxZQUFSLGtCQUFRQSxZQUFSO0FBQUEsTUFBc0JDLGNBQXRCLGtCQUFzQkEsY0FBdEI7O0FBRUEsc0JBQ0Usb0JBQUMsU0FBRDtBQUNFLElBQUEsWUFBWSxFQUFFLEVBRGhCO0FBRUUsSUFBQSxLQUFLLEVBQUVSLEtBRlQ7QUFHRSxJQUFBLFVBQVUsRUFBRUUsUUFIZDtBQUlFLElBQUEsSUFBSSxFQUFFUCxJQUpSO0FBS0UsSUFBQSxXQUFXLEVBQUVGLFdBTGY7QUFNRSxJQUFBLGlCQUFpQixFQUFFWSxpQkFOckI7QUFPRSxJQUFBLFFBQVEsRUFBRWQ7QUFQWixLQVFNZ0IsWUFSTixnQkFVRSxvQkFBQyxRQUFEO0FBQ0UsSUFBQSxFQUFFLEVBQUVoQixFQUROO0FBRUUsSUFBQSxHQUFHLEVBQUVELEdBRlA7QUFHRSxJQUFBLEtBQUssRUFBRVEsVUFIVDtBQUlFLElBQUEsTUFBTSxFQUFFRCxXQUpWO0FBS0UsSUFBQSxRQUFRLEVBQUVILFFBTFo7QUFNRSxJQUFBLFFBQVEsRUFBRVEsUUFOWjtBQU9FLElBQUEsU0FBUyxFQUFFSCxTQVBiO0FBUUUsSUFBQSxVQUFVLEVBQUVQLFVBUmQ7QUFTRSxJQUFBLFdBQVcsRUFBRVMsV0FUZjtBQVVFLElBQUEsVUFBVSxFQUFFRyxVQVZkO0FBV0UsSUFBQSxNQUFNLEVBQUVEO0FBWFYsS0FZTUssY0FaTixFQVZGLENBREY7QUEyQkQsQ0E3RFMsQ0FEYyxDQUExQjtBQWlFQXBCLGFBQWEsQ0FBQ3FCLFNBQWQsaURBSUt0QixRQUFRLENBQUNzQixTQUpkLEdBS0t4QixTQUFTLENBQUN3QixTQUxmO0FBT0U7QUFDRjtBQUNBO0FBQ0VULEVBQUFBLEtBQUssRUFBRWpCLFNBQVMsQ0FBQzJCLElBQVYsQ0FBZUMsVUFWeEI7O0FBWUU7QUFDRjtBQUNBO0FBQ0VULEVBQUFBLFFBQVEsRUFBRW5CLFNBQVMsQ0FBQzZCLElBZnRCOztBQWlCRTtBQUNGO0FBQ0E7QUFDRW5CLEVBQUFBLFdBQVcsRUFBRVYsU0FBUyxDQUFDMkIsSUFwQnpCOztBQXNCRTtBQUNGO0FBQ0E7QUFDRWYsRUFBQUEsSUFBSSxFQUFFWixTQUFTLENBQUMyQixJQXpCbEI7O0FBMkJFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0VMLEVBQUFBLGlCQUFpQixFQUFFdEIsU0FBUyxDQUFDMkIsSUEvQi9COztBQWlDRTtBQUNGO0FBQ0E7QUFDRWIsRUFBQUEsV0FBVyxFQUFFZCxTQUFTLENBQUM4QixNQXBDekI7O0FBc0NFO0FBQ0Y7QUFDQTtBQUNFZixFQUFBQSxVQUFVLEVBQUVmLFNBQVMsQ0FBQytCLFNBQVYsQ0FBb0IsQ0FBQy9CLFNBQVMsQ0FBQzhCLE1BQVgsRUFBbUI5QixTQUFTLENBQUNnQyxNQUE3QixDQUFwQjtBQXpDZDtBQTRDQSxlQUFlM0IsYUFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBtZW1vLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBzcGxpdEJveFByb3BzIH0gZnJvbSAndWktYm94J1xuaW1wb3J0IHsgRm9ybUZpZWxkIH0gZnJvbSAnLi4vLi4vZm9ybS1maWVsZCdcbmltcG9ydCB7IHVzZUlkIH0gZnJvbSAnLi4vLi4vaG9va3MnXG5pbXBvcnQgVGV4dGFyZWEgZnJvbSAnLi9UZXh0YXJlYSdcblxuY29uc3QgVGV4dGFyZWFGaWVsZCA9IG1lbW8oXG4gIGZvcndhcmRSZWYoZnVuY3Rpb24gVGV4dGFyZWFGaWVsZChwcm9wcywgcmVmKSB7XG4gICAgY29uc3QgaWQgPSB1c2VJZCgnVGV4dGFyZWFGaWVsZCcsIHByb3BzLmlkKVxuXG4gICAgY29uc3Qge1xuICAgICAgLy8gV2UgYXJlIHVzaW5nIHRoZSBpZCBmcm9tIHRoZSBzdGF0ZVxuICAgICAgYXBwZWFyYW5jZSxcblxuICAgICAgLy8gRm9ybUZpZWxkIHByb3BzXG4gICAgICBkZXNjcmlwdGlvbixcbiAgICAgIGRpc2FibGVkLFxuICAgICAgaGludCxcbiAgICAgIGlkOiB1bnVzZWRJZCxcblxuICAgICAgLy8gVGV4dGFyZWEgcHJvcHNcbiAgICAgIGlucHV0SGVpZ2h0ID0gODAsXG4gICAgICAvKiogVGhlIGlucHV0IHdpZHRoIHNob3VsZCBiZSBhcyB3aWRlIGFzIHRoZSBmb3JtIGZpZWxkLiAqL1xuICAgICAgaW5wdXRXaWR0aCA9ICcxMDAlJyxcbiAgICAgIGlzSW52YWxpZCxcbiAgICAgIGxhYmVsLFxuICAgICAgcGxhY2Vob2xkZXIsXG4gICAgICByZXF1aXJlZCxcbiAgICAgIHJlc2l6ZSxcbiAgICAgIHNwZWxsQ2hlY2ssXG4gICAgICB2YWxpZGF0aW9uTWVzc2FnZSxcblxuICAgICAgLy8gUmVzdCBwcm9wcyBhcmUgc3ByZWFkIG9uIHRoZSBGb3JtRmllbGRcbiAgICAgIC4uLnJlc3RcbiAgICB9ID0gcHJvcHNcblxuICAgIC8qKlxuICAgICAqIFNwbGl0IHRoZSB3cmFwcGVyIHByb3BzIGZyb20gdGhlIGlucHV0IHByb3BzLlxuICAgICAqL1xuICAgIGNvbnN0IHsgbWF0Y2hlZFByb3BzLCByZW1haW5pbmdQcm9wcyB9ID0gc3BsaXRCb3hQcm9wcyhyZXN0KVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxGb3JtRmllbGRcbiAgICAgICAgbWFyZ2luQm90dG9tPXsyNH1cbiAgICAgICAgbGFiZWw9e2xhYmVsfVxuICAgICAgICBpc1JlcXVpcmVkPXtyZXF1aXJlZH1cbiAgICAgICAgaGludD17aGludH1cbiAgICAgICAgZGVzY3JpcHRpb249e2Rlc2NyaXB0aW9ufVxuICAgICAgICB2YWxpZGF0aW9uTWVzc2FnZT17dmFsaWRhdGlvbk1lc3NhZ2V9XG4gICAgICAgIGxhYmVsRm9yPXtpZH1cbiAgICAgICAgey4uLm1hdGNoZWRQcm9wc31cbiAgICAgID5cbiAgICAgICAgPFRleHRhcmVhXG4gICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgIHdpZHRoPXtpbnB1dFdpZHRofVxuICAgICAgICAgIGhlaWdodD17aW5wdXRIZWlnaHR9XG4gICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgIHJlcXVpcmVkPXtyZXF1aXJlZH1cbiAgICAgICAgICBpc0ludmFsaWQ9e2lzSW52YWxpZH1cbiAgICAgICAgICBhcHBlYXJhbmNlPXthcHBlYXJhbmNlfVxuICAgICAgICAgIHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cbiAgICAgICAgICBzcGVsbENoZWNrPXtzcGVsbENoZWNrfVxuICAgICAgICAgIHJlc2l6ZT17cmVzaXplfVxuICAgICAgICAgIHsuLi5yZW1haW5pbmdQcm9wc31cbiAgICAgICAgLz5cbiAgICAgIDwvRm9ybUZpZWxkPlxuICAgIClcbiAgfSlcbilcblxuVGV4dGFyZWFGaWVsZC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBDb21wb3NlcyB0aGUgVGV4dGFyZWEgY29tcG9uZW50IGFzIHRoZSBiYXNlLlxuICAgKi9cbiAgLi4uVGV4dGFyZWEucHJvcFR5cGVzLFxuICAuLi5Gb3JtRmllbGQucHJvcFR5cGVzLFxuXG4gIC8qKlxuICAgKiBUaGUgbGFiZWwgdXNlZCBhYm92ZSB0aGUgaW5wdXQgZWxlbWVudC5cbiAgICovXG4gIGxhYmVsOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0byBzaG93IGFuIGFzdGVyaXggYWZ0ZXIgdGhlIGxhYmVsLlxuICAgKi9cbiAgcmVxdWlyZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBBbiBvcHRpb25hbCBkZXNjcmlwdGlvbiBvZiB0aGUgZmllbGQgdW5kZXIgdGhlIGxhYmVsLCBhYm92ZSB0aGUgaW5wdXQgZWxlbWVudC5cbiAgICovXG4gIGRlc2NyaXB0aW9uOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogQW4gb3B0aW9uYWwgaGludCB1bmRlciB0aGUgaW5wdXQgZWxlbWVudC5cbiAgICovXG4gIGhpbnQ6IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBJZiBhIHZhbGlkYXRpb24gbWVzc2FnZSBpcyBwYXNzZWQgaXQgaXMgc2hvd24gdW5kZXIgdGhlIGlucHV0IGVsZW1lbnRcbiAgICogYW5kIGFib3ZlIHRoZSBoaW50LiBUaGlzIGlzIHVuYWZmZWN0ZWQgYnkgYGlzSW52YWxpZGAuXG4gICAqL1xuICB2YWxpZGF0aW9uTWVzc2FnZTogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIFRoZSBoZWlnaHQgb2YgdGhlIGlucHV0IGVsZW1lbnQuXG4gICAqL1xuICBpbnB1dEhlaWdodDogUHJvcFR5cGVzLm51bWJlcixcblxuICAvKipcbiAgICogVGhlIHdpZHRoIG9mIHRoZSBpbnB1dCB3aWR0aC5cbiAgICovXG4gIGlucHV0V2lkdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zdHJpbmddKVxufVxuXG5leHBvcnQgZGVmYXVsdCBUZXh0YXJlYUZpZWxkXG4iXX0=