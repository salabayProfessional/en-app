import React from 'react';
import { render, screen } from '@testing-library/react';
import Avatar from '../src/Avatar';
describe('Avatar', function () {
  it('should not crash when rendering', function () {
    expect(function () {
      render( /*#__PURE__*/React.createElement(Avatar, null));
    }).not.toThrowError();
  });
  it('should render question mark when name is empty and no image src', function () {
    render( /*#__PURE__*/React.createElement(Avatar, {
      name: ""
    }));
    expect(screen.getByText('?')).toBeVisible();
  });
  it('should render one char when name is one word and no image src', function () {
    render( /*#__PURE__*/React.createElement(Avatar, {
      name: "Alan"
    }));
    expect(screen.getByText('A')).toBeVisible();
  });
  it('should render first and last initial when name is more than one word and no image src', function () {
    render( /*#__PURE__*/React.createElement(Avatar, {
      name: "Alan Turing Batman"
    }));
    expect(screen.getByText('AT')).toBeVisible();
  });
  it('should render an image when pass in src', function () {
    render( /*#__PURE__*/React.createElement(Avatar, {
      src: "https://upload.wikimedia.org/wikipedia/commons/a/a1/Alan_Turing_Aged_16.jpg"
    }));
    expect(screen.getByRole('img').getAttribute('src')).toEqual('https://upload.wikimedia.org/wikipedia/commons/a/a1/Alan_Turing_Aged_16.jpg');
  });
  it('should render the according size', function () {
    render( /*#__PURE__*/React.createElement(Avatar, {
      name: "Alan Turing",
      size: 80
    }));
    expect(screen.getByTitle('Alan Turing')).toHaveStyle('height: 80px');
  });
  it('should render a square if the shape is square', function () {
    render( /*#__PURE__*/React.createElement(Avatar, {
      name: "Alan Turing",
      shape: "square"
    }));
    expect(screen.getByTitle('Alan Turing')).toHaveStyle('border-top-right-radius: 4px');
  });
  it('should render the color when specified', function () {
    render( /*#__PURE__*/React.createElement(Avatar, {
      name: "Alan Turing",
      color: "green"
    }));
    expect(screen.getByTitle('Alan Turing')).toHaveStyle('background-color: #DCF2EA');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hdmF0YXIvX190ZXN0c19fL0F2YXRhci50ZXN0LmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVuZGVyIiwic2NyZWVuIiwiQXZhdGFyIiwiZGVzY3JpYmUiLCJpdCIsImV4cGVjdCIsIm5vdCIsInRvVGhyb3dFcnJvciIsImdldEJ5VGV4dCIsInRvQmVWaXNpYmxlIiwiZ2V0QnlSb2xlIiwiZ2V0QXR0cmlidXRlIiwidG9FcXVhbCIsImdldEJ5VGl0bGUiLCJ0b0hhdmVTdHlsZSJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsS0FBUCxNQUFrQixPQUFsQjtBQUNBLFNBQVNDLE1BQVQsRUFBaUJDLE1BQWpCLFFBQStCLHdCQUEvQjtBQUNBLE9BQU9DLE1BQVAsTUFBbUIsZUFBbkI7QUFFQUMsUUFBUSxDQUFDLFFBQUQsRUFBVyxZQUFNO0FBQ3ZCQyxFQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsWUFBTTtBQUMxQ0MsSUFBQUEsTUFBTSxDQUFDLFlBQU07QUFDWEwsTUFBQUEsTUFBTSxlQUFDLG9CQUFDLE1BQUQsT0FBRCxDQUFOO0FBQ0QsS0FGSyxDQUFOLENBRUdNLEdBRkgsQ0FFT0MsWUFGUDtBQUdELEdBSkMsQ0FBRjtBQU1BSCxFQUFBQSxFQUFFLENBQUMsaUVBQUQsRUFBb0UsWUFBTTtBQUMxRUosSUFBQUEsTUFBTSxlQUFDLG9CQUFDLE1BQUQ7QUFBUSxNQUFBLElBQUksRUFBQztBQUFiLE1BQUQsQ0FBTjtBQUNBSyxJQUFBQSxNQUFNLENBQUNKLE1BQU0sQ0FBQ08sU0FBUCxDQUFpQixHQUFqQixDQUFELENBQU4sQ0FBOEJDLFdBQTlCO0FBQ0QsR0FIQyxDQUFGO0FBS0FMLEVBQUFBLEVBQUUsQ0FBQywrREFBRCxFQUFrRSxZQUFNO0FBQ3hFSixJQUFBQSxNQUFNLGVBQUMsb0JBQUMsTUFBRDtBQUFRLE1BQUEsSUFBSSxFQUFDO0FBQWIsTUFBRCxDQUFOO0FBQ0FLLElBQUFBLE1BQU0sQ0FBQ0osTUFBTSxDQUFDTyxTQUFQLENBQWlCLEdBQWpCLENBQUQsQ0FBTixDQUE4QkMsV0FBOUI7QUFDRCxHQUhDLENBQUY7QUFLQUwsRUFBQUEsRUFBRSxDQUFDLHVGQUFELEVBQTBGLFlBQU07QUFDaEdKLElBQUFBLE1BQU0sZUFBQyxvQkFBQyxNQUFEO0FBQVEsTUFBQSxJQUFJLEVBQUM7QUFBYixNQUFELENBQU47QUFDQUssSUFBQUEsTUFBTSxDQUFDSixNQUFNLENBQUNPLFNBQVAsQ0FBaUIsSUFBakIsQ0FBRCxDQUFOLENBQStCQyxXQUEvQjtBQUNELEdBSEMsQ0FBRjtBQUtBTCxFQUFBQSxFQUFFLENBQUMseUNBQUQsRUFBNEMsWUFBTTtBQUNsREosSUFBQUEsTUFBTSxlQUFDLG9CQUFDLE1BQUQ7QUFBUSxNQUFBLEdBQUcsRUFBQztBQUFaLE1BQUQsQ0FBTjtBQUNBSyxJQUFBQSxNQUFNLENBQUNKLE1BQU0sQ0FBQ1MsU0FBUCxDQUFpQixLQUFqQixFQUF3QkMsWUFBeEIsQ0FBcUMsS0FBckMsQ0FBRCxDQUFOLENBQW9EQyxPQUFwRCxDQUNFLDZFQURGO0FBR0QsR0FMQyxDQUFGO0FBT0FSLEVBQUFBLEVBQUUsQ0FBQyxrQ0FBRCxFQUFxQyxZQUFNO0FBQzNDSixJQUFBQSxNQUFNLGVBQUMsb0JBQUMsTUFBRDtBQUFRLE1BQUEsSUFBSSxFQUFDLGFBQWI7QUFBMkIsTUFBQSxJQUFJLEVBQUU7QUFBakMsTUFBRCxDQUFOO0FBQ0FLLElBQUFBLE1BQU0sQ0FBQ0osTUFBTSxDQUFDWSxVQUFQLENBQWtCLGFBQWxCLENBQUQsQ0FBTixDQUF5Q0MsV0FBekMsQ0FBcUQsY0FBckQ7QUFDRCxHQUhDLENBQUY7QUFLQVYsRUFBQUEsRUFBRSxDQUFDLCtDQUFELEVBQWtELFlBQU07QUFDeERKLElBQUFBLE1BQU0sZUFBQyxvQkFBQyxNQUFEO0FBQVEsTUFBQSxJQUFJLEVBQUMsYUFBYjtBQUEyQixNQUFBLEtBQUssRUFBQztBQUFqQyxNQUFELENBQU47QUFDQUssSUFBQUEsTUFBTSxDQUFDSixNQUFNLENBQUNZLFVBQVAsQ0FBa0IsYUFBbEIsQ0FBRCxDQUFOLENBQXlDQyxXQUF6QyxDQUFxRCw4QkFBckQ7QUFDRCxHQUhDLENBQUY7QUFLQVYsRUFBQUEsRUFBRSxDQUFDLHdDQUFELEVBQTJDLFlBQU07QUFDakRKLElBQUFBLE1BQU0sZUFBQyxvQkFBQyxNQUFEO0FBQVEsTUFBQSxJQUFJLEVBQUMsYUFBYjtBQUEyQixNQUFBLEtBQUssRUFBQztBQUFqQyxNQUFELENBQU47QUFDQUssSUFBQUEsTUFBTSxDQUFDSixNQUFNLENBQUNZLFVBQVAsQ0FBa0IsYUFBbEIsQ0FBRCxDQUFOLENBQXlDQyxXQUF6QyxDQUFxRCwyQkFBckQ7QUFDRCxHQUhDLENBQUY7QUFJRCxDQTNDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4gfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0J1xuaW1wb3J0IEF2YXRhciBmcm9tICcuLi9zcmMvQXZhdGFyJ1xuXG5kZXNjcmliZSgnQXZhdGFyJywgKCkgPT4ge1xuICBpdCgnc2hvdWxkIG5vdCBjcmFzaCB3aGVuIHJlbmRlcmluZycsICgpID0+IHtcbiAgICBleHBlY3QoKCkgPT4ge1xuICAgICAgcmVuZGVyKDxBdmF0YXIgLz4pXG4gICAgfSkubm90LnRvVGhyb3dFcnJvcigpXG4gIH0pXG5cbiAgaXQoJ3Nob3VsZCByZW5kZXIgcXVlc3Rpb24gbWFyayB3aGVuIG5hbWUgaXMgZW1wdHkgYW5kIG5vIGltYWdlIHNyYycsICgpID0+IHtcbiAgICByZW5kZXIoPEF2YXRhciBuYW1lPVwiXCIgLz4pXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJz8nKSkudG9CZVZpc2libGUoKVxuICB9KVxuXG4gIGl0KCdzaG91bGQgcmVuZGVyIG9uZSBjaGFyIHdoZW4gbmFtZSBpcyBvbmUgd29yZCBhbmQgbm8gaW1hZ2Ugc3JjJywgKCkgPT4ge1xuICAgIHJlbmRlcig8QXZhdGFyIG5hbWU9XCJBbGFuXCIgLz4pXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0EnKSkudG9CZVZpc2libGUoKVxuICB9KVxuXG4gIGl0KCdzaG91bGQgcmVuZGVyIGZpcnN0IGFuZCBsYXN0IGluaXRpYWwgd2hlbiBuYW1lIGlzIG1vcmUgdGhhbiBvbmUgd29yZCBhbmQgbm8gaW1hZ2Ugc3JjJywgKCkgPT4ge1xuICAgIHJlbmRlcig8QXZhdGFyIG5hbWU9XCJBbGFuIFR1cmluZyBCYXRtYW5cIiAvPilcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnQVQnKSkudG9CZVZpc2libGUoKVxuICB9KVxuXG4gIGl0KCdzaG91bGQgcmVuZGVyIGFuIGltYWdlIHdoZW4gcGFzcyBpbiBzcmMnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxBdmF0YXIgc3JjPVwiaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy9hL2ExL0FsYW5fVHVyaW5nX0FnZWRfMTYuanBnXCIgLz4pXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVJvbGUoJ2ltZycpLmdldEF0dHJpYnV0ZSgnc3JjJykpLnRvRXF1YWwoXG4gICAgICAnaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy9hL2ExL0FsYW5fVHVyaW5nX0FnZWRfMTYuanBnJ1xuICAgIClcbiAgfSlcblxuICBpdCgnc2hvdWxkIHJlbmRlciB0aGUgYWNjb3JkaW5nIHNpemUnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxBdmF0YXIgbmFtZT1cIkFsYW4gVHVyaW5nXCIgc2l6ZT17ODB9IC8+KVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUaXRsZSgnQWxhbiBUdXJpbmcnKSkudG9IYXZlU3R5bGUoJ2hlaWdodDogODBweCcpXG4gIH0pXG5cbiAgaXQoJ3Nob3VsZCByZW5kZXIgYSBzcXVhcmUgaWYgdGhlIHNoYXBlIGlzIHNxdWFyZScsICgpID0+IHtcbiAgICByZW5kZXIoPEF2YXRhciBuYW1lPVwiQWxhbiBUdXJpbmdcIiBzaGFwZT1cInNxdWFyZVwiIC8+KVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUaXRsZSgnQWxhbiBUdXJpbmcnKSkudG9IYXZlU3R5bGUoJ2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHgnKVxuICB9KVxuXG4gIGl0KCdzaG91bGQgcmVuZGVyIHRoZSBjb2xvciB3aGVuIHNwZWNpZmllZCcsICgpID0+IHtcbiAgICByZW5kZXIoPEF2YXRhciBuYW1lPVwiQWxhbiBUdXJpbmdcIiBjb2xvcj1cImdyZWVuXCIgLz4pXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRpdGxlKCdBbGFuIFR1cmluZycpKS50b0hhdmVTdHlsZSgnYmFja2dyb3VuZC1jb2xvcjogI0RDRjJFQScpXG4gIH0pXG59KVxuIl19